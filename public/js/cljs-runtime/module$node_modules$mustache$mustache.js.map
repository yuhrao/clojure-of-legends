{
"version":3,
"file":"module$node_modules$mustache$mustache.js",
"lineCount":22,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,eAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACjG,SAAS,CAACH,MAAD,CAASI,OAAT,CAAkB,CACP,QAAnB,GAAA,MAAOD,QAAP,EAAiD,WAAjD,GAA+B,MAAOD,OAAtC,CAA+DA,MAAOC,CAAAA,OAAtE,CAAgFC,OAAA,EAAhF,CACkB,UAAlB,GAAA,MAAOC,OAAP,EAAgCA,MAAOC,CAAAA,GAAvC,CAA6CD,MAAA,CAAOD,OAAP,CAA7C,EACCJ,MAAA,CAASA,MAAT,EAAmBO,IAAnB,CAAyBP,MAAOQ,CAAAA,QAAhC,CAA2CJ,OAAA,EAD5C,CAF0B,CAA3B,CAAA,CAIC,IAJD,CAIQ,QAAS,EAAG,CAYnBK,QAASA,WAAW,CAACC,MAAD,CAAS,CAC3B,MAAyB,UAAzB,GAAO,MAAOA,OADa,CAY7BC,QAASA,aAAa,CAACC,MAAD,CAAS,CAC7B,MAAOA,OAAOC,CAAAA,OAAP,CAAe,6BAAf,CAA8C,SAA9C,CADsB,CAQ/BC,QAASA,YAAY,CAACC,GAAD;AAAMC,QAAN,CAAgB,CACnC,MAAc,KAAd,EAAOD,GAAP,EAAqC,QAArC,GAAsB,MAAOA,IAA7B,EAAkDC,QAAlD,GAA8DD,IAD3B,CA8ErCE,QAASA,cAAc,CAACC,QAAD,CAAWC,IAAX,CAAiB,CActCC,QAASA,WAAW,EAAG,CACrB,GAAIC,MAAJ,EAAc,CAACC,QAAf,CACE,IAAA,CAAOC,MAAOC,CAAAA,MAAd,CAAA,CACE,OAAOC,MAAA,CAAOF,MAAOG,CAAAA,GAAP,EAAP,CAFX,KAIEH,OAAA,CAAS,EAIXD,SAAA,CADAD,MACA,CADS,CAAA,CARY,CAavBM,QAASA,YAAY,CAACC,aAAD,CAAgB,CACN,QAA7B,GAAI,MAAOA,cAAX,GACEA,aADF,CACkBA,aAAcC,CAAAA,KAAd,CAAoBC,OAApB,CAA6B,CAA7B,CADlB,CAGA,IAAI,CAACC,OAAA,CAAQH,aAAR,CAAL,EAAwD,CAAxD,GAA+BA,aAAcJ,CAAAA,MAA7C,CACE,KAAUQ,MAAJ,CAAU,gBAAV,CAA6BJ,aAA7B,CAAN,CAEFK,YAAA,CAAe,IAAIC,MAAJ,CAAWvB,YAAA,CAAaiB,aAAA,CAAc,CAAd,CAAb,CAAX,CAA4C,MAA5C,CACfO;YAAA,CAAe,IAAID,MAAJ,CAAW,MAAX,CAAoBvB,YAAA,CAAaiB,aAAA,CAAc,CAAd,CAAb,CAApB,CACfQ,eAAA,CAAiB,IAAIF,MAAJ,CAAW,MAAX,CAAoBvB,YAAA,CAAa,GAAb,CAAmBiB,aAAA,CAAc,CAAd,CAAnB,CAApB,CATkB,CA1BrC,GAAI,CAACV,QAAL,CACE,MAAO,EACT,KAAImB,gBAAkB,CAAA,CAAtB,CACIC,SAAW,EADf,CAEIb,OAAS,EAFb,CAGIF,OAAS,EAHb,CAIIF,OAAS,CAAA,CAJb,CAKIC,SAAW,CAAA,CALf,CAMIiB,YAAc,EANlB,CAOIC,SAAW,CAPf,CAuBIP,YAvBJ,CAuBkBE,YAvBlB,CAuBgCC,cAahCT,YAAA,CAAYR,IAAZ,EAAoBsB,QAAStB,CAAAA,IAA7B,CAEIuB,SAAAA,CAAU,IAAIC,OAAJ,CAAYzB,QAAZ,CAGd,KA5CsC,IA2C3B0B,IA3C2B,CA2CrBC,KA3CqB,CA2CTC,KAC7B,CAAO,CAACJ,QAAQK,CAAAA,GAAR,EAAR,CAAA,CAAuB,CACrBC,IAAA,CAAQN,QAAQO,CAAAA,GAKhB,IAFAJ,KAEA,CAFQH,QAAQQ,CAAAA,SAAR,CAAkBjB,YAAlB,CAER,CAAW,CACAkB,KAAAA,CAAI,CAAb,KAAK,IAAWC,YAAcP,KAAMrB,CAAAA,MAApC,CAA4C2B,KAA5C;AAAgDC,WAAhD,CAA6D,EAAED,KAA/D,CACEE,IAeA,CAfMR,KAAMS,CAAAA,MAAN,CAAaH,KAAb,CAeN,CA5HCI,UAAWC,CAAAA,IAAX,CAKYC,UALZ,CA+GgBJ,IA/GhB,CA+GD,EAKEhB,eACA,CAFAf,QAEA,CAFW,CAAA,CAEX,CAAAiB,WAAA,EAAe,GANjB,GACEhB,MAAOmC,CAAAA,IAAP,CAAYjC,MAAOD,CAAAA,MAAnB,CACA,CAAAe,WAAA,EAAec,IAFjB,CAaA,CAJA5B,MAAOiC,CAAAA,IAAP,CAAY,CAAE,MAAF,CAAUL,IAAV,CAAeL,IAAf,CAAsBA,IAAtB,CAA8B,CAA9B,CAAZ,CAIA,CAHAA,IAGA,EAHS,CAGT,CAAY,IAAZ,GAAIK,IAAJ,GACEjC,UAAA,EAGA,CAFAmB,WAEA,CAFc,EAEd,CADAC,QACA,CADW,CACX,CAAAH,eAAA,CAAkB,CAAA,CAJpB,CAjBO,CA2BX,GAAI,CAACK,QAAQiB,CAAAA,IAAR,CAAa1B,YAAb,CAAL,CACE,KAEFZ,OAAA,CAAS,CAAA,CAGTuB,KAAA,CAAOF,QAAQiB,CAAAA,IAAR,CAAaC,KAAb,CAAP,EAA8B,MAC9BlB,SAAQiB,CAAAA,IAAR,CAAaE,OAAb,CAGa,OAAb,GAAIjB,IAAJ,EACEC,KAEA,CAFQH,QAAQQ,CAAAA,SAAR,CAAkBY,QAAlB,CAER,CADApB,QAAQiB,CAAAA,IAAR,CAAaG,QAAb,CACA,CAAApB,QAAQQ,CAAAA,SAAR,CAAkBf,YAAlB,CAHF;AAIoB,GAAb,GAAIS,IAAJ,EACLC,KAGA,CAHQH,QAAQQ,CAAAA,SAAR,CAAkBd,cAAlB,CAGR,CAFAM,QAAQiB,CAAAA,IAAR,CAAaI,OAAb,CAEA,CADArB,QAAQQ,CAAAA,SAAR,CAAkBf,YAAlB,CACA,CAAAS,IAAA,CAAO,MAJF,EAMLC,KANK,CAMGH,QAAQQ,CAAAA,SAAR,CAAkBf,YAAlB,CAIV,IAAI,CAACO,QAAQiB,CAAAA,IAAR,CAAaxB,YAAb,CAAL,CACE,KAAUH,MAAJ,CAAU,kBAAV,CAA+BU,QAAQO,CAAAA,GAAvC,CAAN,CAGAH,KAAA,CADU,MAAZ,EAAIF,IAAJ,CACU,CAAEA,IAAF,CAAQC,KAAR,CAAeG,IAAf,CAAsBN,QAAQO,CAAAA,GAA9B,CAAmCV,WAAnC,CAAgDC,QAAhD,CAA0DH,eAA1D,CADV,CAGU,CAAEO,IAAF,CAAQC,KAAR,CAAeG,IAAf,CAAsBN,QAAQO,CAAAA,GAA9B,CAEVT,SAAA,EACAf,OAAOiC,CAAAA,IAAP,CAAYZ,KAAZ,CAEA,IAAa,GAAb,GAAIF,IAAJ,EAA6B,GAA7B,GAAoBA,IAApB,CACEN,QAASoB,CAAAA,IAAT,CAAcZ,KAAd,CADF,KAEO,IAAa,GAAb,GAAIF,IAAJ,CAAkB,CAEvBoB,IAAA,CAAc1B,QAASZ,CAAAA,GAAT,EAEd,IAAI,CAACsC,IAAL,CACE,KAAUhC,MAAJ,CAAU,oBAAV;AAAiCa,KAAjC,CAAyC,OAAzC,CAAmDG,IAAnD,CAAN,CAEF,GAAIgB,IAAA,CAAY,CAAZ,CAAJ,GAAuBnB,KAAvB,CACE,KAAUb,MAAJ,CAAU,oBAAV,CAAiCgC,IAAA,CAAY,CAAZ,CAAjC,CAAkD,OAAlD,CAA4DhB,IAA5D,CAAN,CARqB,CAAlB,IASa,MAAb,GAAIJ,IAAJ,EAAgC,GAAhC,GAAuBA,IAAvB,EAAgD,MAAhD,GAAuCA,IAAvC,CACLtB,QADK,CACM,CAAA,CADN,CAEa,MAFb,GAEIsB,IAFJ,EAILjB,WAAA,CAAYkB,KAAZ,CAnFmB,CAuFvBzB,UAAA,EAKA,IAFA4C,IAEA,CAFc1B,QAASZ,CAAAA,GAAT,EAEd,CACE,KAAUM,MAAJ,CAAU,oBAAV,CAAiCgC,IAAA,CAAY,CAAZ,CAAjC,CAAkD,OAAlD,CAA4DtB,QAAQO,CAAAA,GAApE,CAAN,CAEF,MAAOgB,WAAA,CAAWC,YAAA,CAAazC,MAAb,CAAX,CA3I+B,CAkJxCyC,QAASA,aAAa,CAACzC,MAAD,CAAS,CAI7B,IAHA,IAAI0C,eAAiB,EAArB,CAEIrB,KAFJ,CAEWsB,SAFX,CAGSjB,EAAI,CAHb,CAGgBkB,UAAY5C,MAAOD,CAAAA,MAAnC,CAA2C2B,CAA3C,CAA+CkB,SAA/C,CAA0D,EAAElB,CAA5D,CAGE,GAFAL,KAEA,CAFQrB,MAAA,CAAO0B,CAAP,CAER,CACmB,MAAjB,GAAIL,KAAA,CAAM,CAAN,CAAJ,EAA2BsB,SAA3B,EAAyD,MAAzD,GAAwCA,SAAA,CAAU,CAAV,CAAxC;CACEA,SAAA,CAAU,CAAV,CACA,EADgBtB,KAAA,CAAM,CAAN,CAChB,CAAAsB,SAAA,CAAU,CAAV,CAAA,CAAetB,KAAA,CAAM,CAAN,CAFjB,GAIEqB,cAAeT,CAAAA,IAAf,CAAoBZ,KAApB,CACA,CAAAsB,SAAA,CAAYtB,KALd,CAUJ,OAAOqB,eAlBsB,CA2B/BF,QAASA,WAAW,CAACxC,MAAD,CAAS,CAM3B,IALA,IAAI6C,aAAe,EAAnB,CACIC,UAAYD,YADhB,CAEIhC,SAAW,EAFf,CAIIQ,KAJJ,CAKSK,EAAI,CALb,CAKgBkB,UAAY5C,MAAOD,CAAAA,MAAnC,CAA2C2B,CAA3C,CAA+CkB,SAA/C,CAA0D,EAAElB,CAA5D,CAGE,OAFAL,KAEQ,CAFArB,MAAA,CAAO0B,CAAP,CAEA,CAAAL,KAAA,CAAM,CAAN,CAAR,EACE,KAAK,GAAL,CACA,KAAK,GAAL,CACEyB,SAAUb,CAAAA,IAAV,CAAeZ,KAAf,CACAR,SAASoB,CAAAA,IAAT,CAAcZ,KAAd,CACAyB,UAAA,CAAYzB,KAAA,CAAM,CAAN,CAAZ,CAAuB,EACvB,MACF,MAAK,GAAL,CACE0B,SAAA,CAAUlC,QAASZ,CAAAA,GAAT,EACV8C,UAAA,CAAQ,CAAR,CAAA,CAAa1B,KAAA,CAAM,CAAN,CACbyB,UAAA,CAA8B,CAAlB,CAAAjC,QAASd,CAAAA,MAAT,CAAsBc,QAAA,CAASA,QAASd,CAAAA,MAAlB,CAA2B,CAA3B,CAAA,CAA8B,CAA9B,CAAtB,CAAyD8C,YACrE;KACF,SACEC,SAAUb,CAAAA,IAAV,CAAeZ,KAAf,CAbJ,CAiBF,MAAOwB,aA1BoB,CAiC7B3B,QAASA,QAAQ,CAAC/B,MAAD,CAAS,CAExB,IAAK6D,CAAAA,IAAL,CADA,IAAK7D,CAAAA,MACL,CADcA,MAEd,KAAKqC,CAAAA,GAAL,CAAW,CAHa,CA4D1ByB,QAASA,QAAQ,CAACC,IAAD,CAAOC,aAAP,CAAsB,CACrC,IAAKD,CAAAA,IAAL,CAAYA,IACZ,KAAKE,CAAAA,KAAL,CAAa,CAAE,IAAK,IAAKF,CAAAA,IAAZ,CACb,KAAKG,CAAAA,MAAL,CAAcF,aAHuB,CA0GvCG,QAASA,OAAO,EAAG,CACjB,IAAKC,CAAAA,aAAL,CAAqB,CACnBC,OAAQ,EADW,CAEnBC,IAAKA,QAAa,CAACC,GAAD,CAAMtC,KAAN,CAAa,CAC7B,IAAKoC,CAAAA,MAAL,CAAYE,GAAZ,CAAA,CAAmBtC,KADU,CAFZ,CAKnBuC,IAAKA,QAAa,CAACD,GAAD,CAAM,CACtB,MAAO,KAAKF,CAAAA,MAAL,CAAYE,GAAZ,CADe,CALL,CAQnBE,MAAOA,QAAe,EAAG,CACvB,IAAKJ,CAAAA,MAAL,CAAc,EADS,CARN,CADJ,CA3dnB,IAAIK,eAAiBC,MAAOC,CAAAA,SAAUC,CAAAA,QAAtC,CACI1D,QAAU2D,KAAM3D,CAAAA,OAAhBA,EAA2B4D,QAAyB,CAACjF,MAAD,CAAS,CAC/D,MAAuC,gBAAvC;AAAO4E,cAAe9B,CAAAA,IAAf,CAAoB9C,MAApB,CADwD,CADjE,CA4CI6C,WAAarB,MAAOsD,CAAAA,SAAUI,CAAAA,IA5ClC,CAiDInC,WAAa,IAjDjB,CAsDIoC,UAAY,CACd,OAAK,UADS,CAEd,OAAK,SAFS,CAGd,OAAK,SAHS,CAId,IAAK,WAJS,CAKd,IAAK,UALS,CAMd,IAAK,WANS,CAOd,IAAK,WAPS,CAQd,OAAK,WARS,CAtDhB,CAuEIhC,QAAU,KAvEd,CAwEI/B,QAAU,KAxEd,CAyEIgC,SAAW,MAzEf,CA0EIC,QAAU,OA1Ed,CA2EIH,MAAQ,oBAmPZjB,QAAQ6C,CAAAA,SAAUzC,CAAAA,GAAlB,CAAwB+C,QAAa,EAAG,CACtC,MAAqB,EAArB,GAAO,IAAKrB,CAAAA,IAD0B,CAQxC9B,QAAQ6C,CAAAA,SAAU7B,CAAAA,IAAlB,CAAyBoC,QAAc,CAACC,EAAD,CAAK,CACtCC,EAAAA,CAAQ,IAAKxB,CAAAA,IAAKwB,CAAAA,KAAV,CAAgBD,EAAhB,CAEZ,IAAI,CAACC,EAAL,EAA8B,CAA9B,GAAcA,EAAMC,CAAAA,KAApB,CACE,MAAO,EAELtF,GAAAA,CAASqF,EAAA,CAAM,CAAN,CAEb,KAAKxB,CAAAA,IAAL,CAAY,IAAKA,CAAAA,IAAK0B,CAAAA,SAAV,CAAoBvF,EAAOY,CAAAA,MAA3B,CACZ;IAAKyB,CAAAA,GAAL,EAAYrC,EAAOY,CAAAA,MAEnB,OAAOZ,GAXmC,CAkB5C+B,QAAQ6C,CAAAA,SAAUtC,CAAAA,SAAlB,CAA8BkD,QAAmB,CAACJ,EAAD,CAAK,CAChDE,EAAAA,CAAQ,IAAKzB,CAAAA,IAAK4B,CAAAA,MAAV,CAAiBL,EAAjB,CAEZ,QAAQE,EAAR,EACE,KAAK,CAAC,CAAN,CACE,IAAAD,MAAQ,IAAKxB,CAAAA,IACb,KAAKA,CAAAA,IAAL,CAAY,EACZ,MACF,MAAK,CAAL,CACEwB,KAAA,CAAQ,EACR,MACF,SACEA,KACA,CADQ,IAAKxB,CAAAA,IAAK0B,CAAAA,SAAV,CAAoB,CAApB,CAAuBD,EAAvB,CACR,CAAA,IAAKzB,CAAAA,IAAL,CAAY,IAAKA,CAAAA,IAAK0B,CAAAA,SAAV,CAAoBD,EAApB,CAVhB,CAaA,IAAKjD,CAAAA,GAAL,EAAYgD,KAAMzE,CAAAA,MAElB,OAAOyE,MAlB6C,CAmCtDvB,QAAQc,CAAAA,SAAU9B,CAAAA,IAAlB,CAAyB4C,QAAc,CAAC3B,IAAD,CAAO,CAC5C,MAAO,KAAID,OAAJ,CAAYC,IAAZ,CAAkB,IAAlB,CADqC,CAQ9CD,QAAQc,CAAAA,SAAUe,CAAAA,MAAlB,CAA2BC,QAAgB,CAACC,IAAD,CAAO,CAChD,IAAI5B,MAAQ,IAAKA,CAAAA,KAGjB,IAAIA,KAAM6B,CAAAA,cAAN,CAAqBD,IAArB,CAAJ,CACE,IAAA5D,MAAQgC,KAAA,CAAM4B,IAAN,CADV,KAEO,CAGL,IAHK,IACDE,QAAU,IADT,CACeC,iBADf;AACkCC,KADlC,CACyCX,KADzC,CACgDY,UAAY,CAAA,CAEjE,CAAOH,OAAP,CAAA,CAAgB,CACd,GAAwB,CAAxB,CAAIF,IAAKM,CAAAA,OAAL,CAAa,GAAb,CAAJ,CAsBE,IArBAH,iBAEA,CAFoBD,OAAQhC,CAAAA,IAE5B,CADAkC,KACA,CADQJ,IAAK5E,CAAAA,KAAL,CAAW,GAAX,CACR,CAAAqE,KAAA,CAAQ,CAmBR,CAA4B,IAA5B,EAAOU,iBAAP,EAAoCV,KAApC,CAA4CW,KAAMrF,CAAAA,MAAlD,CAAA,CACM0E,KAMJ,GANcW,KAAMrF,CAAAA,MAMpB,CAN6B,CAM7B,GALEsF,SAKF,CAJIhG,WAAA,CAAY8F,iBAAZ,CAA+BC,KAAA,CAAMX,KAAN,CAA/B,CAIJ,EAvYO,IAuYP,EAH+BU,iBAG/B,EAtYkB,QAsYlB,GAtYH,MAmYkCA,kBAG/B,EAH+BA,iBAlYxBF,CAAAA,cAqYP,EAH+BE,iBAjYxBF,CAAAA,cAAV,CAiYqDG,KAAA7F,CAAMkF,KAANlF,CAjYrD,CAoYG,EAAA4F,iBAAA,CAAoBA,iBAAA,CAAkBC,KAAA,CAAMX,KAAA,EAAN,CAAlB,CA7BxB,KAgCEU,kBAqBA,CArBoBD,OAAQhC,CAAAA,IAAR,CAAa8B,IAAb,CAqBpB,CAAAK,SAAA,CAAYhG,WAAA,CAAY6F,OAAQhC,CAAAA,IAApB;AAA0B8B,IAA1B,CAGd,IAAIK,SAAJ,CAAe,CACbjE,KAAA,CAAQ+D,iBACR,MAFa,CAKfD,OAAA,CAAUA,OAAQ7B,CAAAA,MA9DJ,CAiEhBD,KAAA,CAAM4B,IAAN,CAAA,CAAc5D,KApET,CAuEHpC,UAAA,CAAWoC,KAAX,CAAJ,GACEA,KADF,CACUA,KAAMW,CAAAA,IAAN,CAAW,IAAKmB,CAAAA,IAAhB,CADV,CAGA,OAAO9B,MAhFyC,CA0GlDkC,OAAOS,CAAAA,SAAUwB,CAAAA,UAAjB,CAA8BC,QAAoB,EAAG,CACjB,WAAlC,GAAI,MAAO,KAAKjC,CAAAA,aAAhB,EACE,IAAKA,CAAAA,aAAcK,CAAAA,KAAnB,EAFiD,CAWrDN,OAAOS,CAAAA,SAAU0B,CAAAA,KAAjB,CAAyBC,QAAe,CAACjG,QAAD,CAAWC,IAAX,CAAiB,CACvD,IAAI0D,MAAQ,IAAKG,CAAAA,aAAjB,CACIoC,SAAWlG,QAAXkG,CAAsB,GAAtBA,CAAoDC,CAAvBlG,IAAuBkG,EAAf5E,QAAStB,CAAAA,IAAMkG,EAAAA,IAAxB,CAA6B,GAA7B,CADhC,CAEIC,eAAkC,WAAlCA,GAAiB,MAAOzC,MAF5B,CAGIpD,OAAS6F,cAAA,CAAiBzC,KAAMO,CAAAA,GAAN,CAAUgC,QAAV,CAAjB,CAAuCG,IAAAA,EAEtCA,KAAAA,EAAd,EAAI9F,MAAJ,GACEA,MACA;AADSR,aAAA,CAAcC,QAAd,CAAwBC,IAAxB,CACT,CAAAmG,cAAA,EAAkBzC,KAAMK,CAAAA,GAAN,CAAUkC,QAAV,CAAoB3F,MAApB,CAFpB,CAIA,OAAOA,OAVgD,CAoCzDsD,OAAOS,CAAAA,SAAUgC,CAAAA,MAAjB,CAA0BC,QAAgB,CAACvG,QAAD,CAAWyD,IAAX,CAAiB+C,QAAjB,CAA2BC,MAA3B,CAAmC,CAC3E,IAAIxG,KAAO,IAAKyG,CAAAA,aAAL,CAAmBD,MAAnB,CACPlG,KAAAA,CAAS,IAAKyF,CAAAA,KAAL,CAAWhG,QAAX,CAAqBC,IAArB,CACTwF,KAAAA,CAAWhC,IAAD,WAAiBD,QAAjB,CAA4BC,IAA5B,CAAmC,IAAID,OAAJ,CAAYC,IAAZ,CAAkB4C,IAAAA,EAAlB,CACjD,OAAO,KAAKM,CAAAA,YAAL,CAAkBpG,IAAlB,CAA0BkF,IAA1B,CAAmCe,QAAnC,CAA6CxG,QAA7C,CAAuDyG,MAAvD,CAJoE,CAgB7E5C,OAAOS,CAAAA,SAAUqC,CAAAA,YAAjB,CAAgCC,QAAsB,CAACrG,MAAD,CAASkF,OAAT,CAAkBe,QAAlB,CAA4BK,gBAA5B,CAA8CJ,MAA9C,CAAsD,CAI1G,IAHA,IAAIK,OAAS,EAAb,CAEIlF,KAFJ,CAEWmF,MAFX,CAEmBpF,KAFnB,CAGSM,EAAI,CAHb,CAGgBkB,UAAY5C,MAAOD,CAAAA,MAAnC,CAA2C2B,CAA3C,CAA+CkB,SAA/C,CAA0D,EAAElB,CAA5D,CACEN,KAWA;AAXQ0E,IAAAA,EAWR,CAVAzE,KAUA,CAVQrB,MAAA,CAAO0B,CAAP,CAUR,CATA8E,MASA,CATSnF,KAAA,CAAM,CAAN,CAST,CAPe,GAAf,GAAImF,MAAJ,CAAoBpF,KAApB,CAA4B,IAAKqF,CAAAA,aAAL,CAAmBpF,KAAnB,CAA0B6D,OAA1B,CAAmCe,QAAnC,CAA6CK,gBAA7C,CAA+DJ,MAA/D,CAA5B,CACoB,GAAf,GAAIM,MAAJ,CAAoBpF,KAApB,CAA4B,IAAKsF,CAAAA,cAAL,CAAoBrF,KAApB,CAA2B6D,OAA3B,CAAoCe,QAApC,CAA8CK,gBAA9C,CAAgEJ,MAAhE,CAA5B,CACe,MAAf,GAAIM,MAAJ,CAAoBpF,KAApB,CAA4B,IAAKuF,CAAAA,aAAL,CAAmBtF,KAAnB,CAA0B6D,OAA1B,CAAmCe,QAAnC,CAA6CC,MAA7C,CAA5B,CACe,MAAf,GAAIM,MAAJ,CAAoBpF,KAApB,CAA4B,IAAKwF,CAAAA,cAAL,CAAoBvF,KAApB,CAA2B6D,OAA3B,CAA5B,CACe,MAAf,GAAIsB,MAAJ,CAAuBpF,KAAvB,CAA+B,IAAKyF,CAAAA,YAAL,CAAkBxF,KAAlB,CAAyB6D,OAAzB,CAAkCgB,MAAlC,CAA/B,CACe,MADf,GACIM,MADJ,GACuBpF,KADvB,CAC+B,IAAK0F,CAAAA,QAAL,CAAczF,KAAd,CAD/B,CAGL,CAAcyE,IAAAA,EAAd,GAAI1E,KAAJ,GACEmF,MADF,EACYnF,KADZ,CAIF,OAAOmF,OApBmG,CAuB5GjD,OAAOS,CAAAA,SAAU0C,CAAAA,aAAjB;AAAiCM,QAAuB,CAAC1F,KAAD,CAAQ6D,OAAR,CAAiBe,QAAjB,CAA2BK,gBAA3B,CAA6CJ,MAA7C,CAAqD,CAO3Gc,QAASA,UAAU,CAACvH,QAAD,CAAW,CAC5B,MAAOX,KAAKiH,CAAAA,MAAL,CAAYtG,QAAZ,CAAsByF,OAAtB,CAA+Be,QAA/B,CAAyCC,MAAzC,CADqB,CAN9B,IAAIpH,KAAO,IAAX,CACIyH,OAAS,EADb,CAEInF,MAAQ8D,OAAQJ,CAAAA,MAAR,CAAezD,KAAA,CAAM,CAAN,CAAf,CAQZ,IAAKD,KAAL,CAAA,CAEA,GAAId,OAAA,CAAQc,KAAR,CAAJ,CACE,IADkB,IACT6F,EAAI,CADK,CACFtF,YAAcP,KAAMrB,CAAAA,MAApC,CAA4CkH,CAA5C,CAAgDtF,WAAhD,CAA6D,EAAEsF,CAA/D,CACEV,MAAA,EAAU,IAAKH,CAAAA,YAAL,CAAkB/E,KAAA,CAAM,CAAN,CAAlB,CAA4B6D,OAAQjD,CAAAA,IAAR,CAAab,KAAA,CAAM6F,CAAN,CAAb,CAA5B,CAAoDhB,QAApD,CAA8DK,gBAA9D,CAAgFJ,MAAhF,CAFd,KAIO,IAAqB,QAArB,GAAI,MAAO9E,MAAX,EAAkD,QAAlD,GAAiC,MAAOA,MAAxC,EAA+E,QAA/E,GAA8D,MAAOA,MAArE,CACLmF,MAAA,EAAU,IAAKH,CAAAA,YAAL,CAAkB/E,KAAA,CAAM,CAAN,CAAlB,CAA4B6D,OAAQjD,CAAAA,IAAR,CAAab,KAAb,CAA5B;AAAiD6E,QAAjD,CAA2DK,gBAA3D,CAA6EJ,MAA7E,CADL,KAEA,IAAIlH,UAAA,CAAWoC,KAAX,CAAJ,CAAuB,CAC5B,GAAgC,QAAhC,GAAI,MAAOkF,iBAAX,CACE,KAAU/F,MAAJ,CAAU,gEAAV,CAAN,CAGFa,KAAA,CAAQA,KAAMW,CAAAA,IAAN,CAAWmD,OAAQhC,CAAAA,IAAnB,CAAyBoD,gBAAiBY,CAAAA,KAAjB,CAAuB7F,KAAA,CAAM,CAAN,CAAvB,CAAiCA,KAAA,CAAM,CAAN,CAAjC,CAAzB,CAAqE2F,SAArE,CAEK,KAAb,EAAI5F,KAAJ,GACEmF,MADF,EACYnF,KADZ,CAP4B,CAAvB,IAULmF,OAAA,EAAU,IAAKH,CAAAA,YAAL,CAAkB/E,KAAA,CAAM,CAAN,CAAlB,CAA4B6D,OAA5B,CAAqCe,QAArC,CAA+CK,gBAA/C,CAAiEJ,MAAjE,CAEZ,OAAOK,OApBP,CAX2G,CAkC7GjD,OAAOS,CAAAA,SAAU2C,CAAAA,cAAjB,CAAkCS,QAAwB,CAAC9F,KAAD,CAAQ6D,OAAR,CAAiBe,QAAjB,CAA2BK,gBAA3B,CAA6CJ,MAA7C,CAAqD,CAC7G,IAAI9E,MAAQ8D,OAAQJ,CAAAA,MAAR,CAAezD,KAAA,CAAM,CAAN,CAAf,CAIZ;GAAI,CAACD,KAAL,EAAed,OAAA,CAAQc,KAAR,CAAf,EAAkD,CAAlD,GAAiCA,KAAMrB,CAAAA,MAAvC,CACE,MAAO,KAAKqG,CAAAA,YAAL,CAAkB/E,KAAA,CAAM,CAAN,CAAlB,CAA4B6D,OAA5B,CAAqCe,QAArC,CAA+CK,gBAA/C,CAAiEJ,MAAjE,CANoG,CAS/G5C,OAAOS,CAAAA,SAAUqD,CAAAA,aAAjB,CAAiCC,QAAuB,CAACC,OAAD,CAAUxG,WAAV,CAAuBF,eAAvB,CAAwC,CAC1F2G,WAAAA,CAAsBzG,WAAY1B,CAAAA,OAAZ,CAAoB,SAApB,CAA+B,EAA/B,CACtBoI,QAAAA,CAAcF,OAAQlH,CAAAA,KAAR,CAAc,IAAd,CAClB,KAAK,IAAIsB,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8F,OAAYzH,CAAAA,MAAhC,CAAwC2B,CAAA,EAAxC,CACM8F,OAAA,CAAY9F,CAAZ,CAAe3B,CAAAA,MAAnB,GAAkC,CAAlC,CAA8B2B,CAA9B,EAAuC,CAACd,eAAxC,IACE4G,OAAA,CAAY9F,CAAZ,CADF,CACmB6F,WADnB,CACyCC,OAAA,CAAY9F,CAAZ,CADzC,CAIF,OAAO8F,QAAY5B,CAAAA,IAAZ,CAAiB,IAAjB,CARuF,CAWhGtC,OAAOS,CAAAA,SAAU4C,CAAAA,aAAjB,CAAiCc,QAAuB,CAACpG,KAAD,CAAQ6D,OAAR,CAAiBe,QAAjB,CAA2BC,MAA3B,CAAmC,CACzF,GAAKD,QAAL,CAAA,CACA,IAAIvG;AAAO,IAAKyG,CAAAA,aAAL,CAAmBD,MAAnB,CAAX,CAEI9E,MAAQpC,UAAA,CAAWiH,QAAX,CAAA,CAAuBA,QAAA,CAAS5E,KAAA,CAAM,CAAN,CAAT,CAAvB,CAA4C4E,QAAA,CAAS5E,KAAA,CAAM,CAAN,CAAT,CACxD,IAAa,IAAb,EAAID,KAAJ,CAAmB,CACjB,IAAIR,gBAAkBS,KAAA,CAAM,CAAN,CAAtB,CAEIP,YAAcO,KAAA,CAAM,CAAN,CAFlB,CAGIqG,cAAgBtG,KACJ,EAAhB,EAHeC,KAAAN,CAAM,CAANA,CAGf,EAAqBD,WAArB,GACE4G,aADF,CACkB,IAAKN,CAAAA,aAAL,CAAmBhG,KAAnB,CAA0BN,WAA1B,CAAuCF,eAAvC,CADlB,CAGIZ,MAAAA,CAAS,IAAKyF,CAAAA,KAAL,CAAWiC,aAAX,CAA0BhI,IAA1B,CACb,OAAO,KAAK0G,CAAAA,YAAL,CAAkBpG,KAAlB,CAA0BkF,OAA1B,CAAmCe,QAAnC,CAA6CyB,aAA7C,CAA4DxB,MAA5D,CATU,CAJnB,CADyF,CAkB3F5C,OAAOS,CAAAA,SAAU6C,CAAAA,cAAjB,CAAkCe,QAAwB,CAACtG,KAAD,CAAQ6D,OAAR,CAAiB,CACrE9D,KAAAA,CAAQ8D,OAAQJ,CAAAA,MAAR,CAAezD,KAAA,CAAM,CAAN,CAAf,CACZ,IAAa,IAAb,EAAID,KAAJ,CACE,MAAOA,MAHgE,CAM3EkC,OAAOS,CAAAA,SAAU8C,CAAAA,YAAjB;AAAgCe,QAAsB,CAACvG,KAAD,CAAQ6D,OAAR,CAAiBgB,MAAjB,CAAyB,CACzE2B,MAAAA,CAAS,IAAKC,CAAAA,eAAL,CAAqB5B,MAArB,CAAT2B,EAAyC7G,QAAS6G,CAAAA,MAClDzG,MAAAA,CAAQ8D,OAAQJ,CAAAA,MAAR,CAAezD,KAAA,CAAM,CAAN,CAAf,CACZ,IAAa,IAAb,EAAID,KAAJ,CACE,MAAyB,QAAlB,GAAC,MAAOA,MAAR,EAA8ByG,MAA9B,GAAyC7G,QAAS6G,CAAAA,MAAlD,CAA4DE,MAAA,CAAO3G,KAAP,CAA5D,CAA4EyG,MAAA,CAAOzG,KAAP,CAJR,CAO/EkC,OAAOS,CAAAA,SAAU+C,CAAAA,QAAjB,CAA4BkB,QAAkB,CAAC3G,KAAD,CAAQ,CACpD,MAAOA,MAAA,CAAM,CAAN,CAD6C,CAItDiC,OAAOS,CAAAA,SAAUoC,CAAAA,aAAjB,CAAiC8B,QAAuB,CAAC/B,MAAD,CAAS,CAC/D,GAAI5F,OAAA,CAAQ4F,MAAR,CAAJ,CACE,MAAOA,OAEJ,IAAIA,MAAJ,EAAgC,QAAhC,GAAc,MAAOA,OAArB,CACH,MAAOA,OAAOxG,CAAAA,IAL+C,CAYjE4D,OAAOS,CAAAA,SAAU+D,CAAAA,eAAjB,CAAmCI,QAAyB,CAAChC,MAAD,CAAS,CACnE,GAAIA,MAAJ,EAAgC,QAAhC,GAAc,MAAOA,OAArB,EAA4C,CAAC5F,OAAA,CAAQ4F,MAAR,CAA7C,CACE,MAAOA,OAAO2B,CAAAA,MAFmD,CASrE;IAAI7G,SAAW,CACbgE,KAAM,aADO,CAEbmD,QAAS,OAFI,CAGbzI,KAAM,CAAE,IAAF,CAAQ,IAAR,CAHO,CAIb6F,WAAYO,IAAAA,EAJC,CAKb+B,OAAQ/B,IAAAA,EALK,CAMbL,MAAOK,IAAAA,EANM,CAObC,OAAQD,IAAAA,EAPK,CAQb5E,QAAS4E,IAAAA,EARI,CASb7C,QAAS6C,IAAAA,EATI,CAUbxC,OAAQwC,IAAAA,EAVK,CAgBTvC,iBAAc,CAACH,KAAD,CAAQ,CACxBgF,aAAc7E,CAAAA,aAAd,CAA8BH,KADN,CAhBb,CAsBTG,iBAAiB,EAAA,CACnB,MAAO6E,cAAc7E,CAAAA,aADF,CAtBR,CAAf,CA4BI6E,cAAgB,IAAI9E,MAKxBtC,SAASuE,CAAAA,UAAT,CAAsB8C,QAAoB,EAAG,CAC3C,MAAOD,cAAc7C,CAAAA,UAAd,EADoC,CAS7CvE,SAASyE,CAAAA,KAAT,CAAiB6C,QAAe,CAAC7I,QAAD,CAAWC,IAAX,CAAiB,CAC/C,MAAO0I,cAAc3C,CAAAA,KAAd,CAAoBhG,QAApB,CAA8BC,IAA9B,CADwC,CAQjDsB,SAAS+E,CAAAA,MAAT,CAAkBwC,QAAgB,CAAC9I,QAAD,CAAWyD,IAAX,CAAiB+C,QAAjB;AAA2BC,MAA3B,CAAmC,CACnE,GAAwB,QAAxB,GAAI,MAAOzG,SAAX,CACE,KAAU+I,KAAJ,CAAIA,SAAJ,CAvtBR,QAutBQ,CAvtBDlI,OAAA,CAwtBiCb,QAxtBjC,CAAA,CAAe,OAAf,CAAyB,MAwtBQA,SADhC,CAAA,IAAI+I,IAAJ,CAAc,uDAAd,CACwB,QADxB,CAC4C,iFAD5C,CAAN,CAKF,MAAOJ,cAAcrC,CAAAA,MAAd,CAAqBtG,QAArB,CAA+ByD,IAA/B,CAAqC+C,QAArC,CAA+CC,MAA/C,CAP4D,CAYrElF,SAAS6G,CAAAA,MAAT,CA9qBAY,QAAoB,CAACtJ,MAAD,CAAS,CAC3B,MAAO4I,OAAA,CAAO5I,MAAP,CAAeC,CAAAA,OAAf,CAAuB,cAAvB,CAAuCsJ,QAAuB,CAACC,CAAD,CAAI,CACvE,MAAOvE,UAAA,CAAUuE,CAAV,CADgE,CAAlE,CADoB,CAirB7B3H,SAASE,CAAAA,OAAT,CAAmBA,OACnBF,SAASiC,CAAAA,OAAT,CAAmBA,OACnBjC,SAASsC,CAAAA,MAAT;AAAkBA,MAElB,OAAOtC,SA7vBY,CAJpB,CADiG;",
"sources":["node_modules/mustache/mustache.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mustache$mustache\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Mustache = factory());\n}(this, (function () { 'use strict';\n\n  /*!\n   * mustache.js - Logic-less {{mustache}} templates with JavaScript\n   * http://github.com/janl/mustache.js\n   */\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.templateCache = {\n      _cache: {},\n      set: function set (key, value) {\n        this._cache[key] = value;\n      },\n      get: function get (key) {\n        return this._cache[key];\n      },\n      clear: function clear () {\n        this._cache = {};\n      }\n    };\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    if (typeof this.templateCache !== 'undefined') {\n      this.templateCache.clear();\n    }\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.templateCache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var isCacheEnabled = typeof cache !== 'undefined';\n    var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n    if (tokens == undefined) {\n      tokens = parseTemplate(template, tags);\n      isCacheEnabled && cache.set(cacheKey, tokens);\n    }\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `config` argument is given here, then it should be an\n   * object with a `tags` attribute or an `escape` attribute or both.\n   * If an array is passed, then it will be interpreted the same way as\n   * a `tags` attribute on a `config` object.\n   *\n   * The `tags` attribute of a `config` object must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   *\n   * The `escape` attribute of a `config` object must be a function which\n   * accepts a string as input and outputs a safely escaped string.\n   * If an `escape` function is not provided, then an HTML-safe string\n   * escaping function is used as the default.\n   */\n  Writer.prototype.render = function render (template, view, partials, config) {\n    var tags = this.getConfigTags(config);\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view, undefined);\n    return this.renderTokens(tokens, context, partials, template, config);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, config) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate, config);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate, config);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, config);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context, config);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate, config) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials, config);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate, config);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate, config);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate, config);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate, config) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate, config);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, config) {\n    if (!partials) return;\n    var tags = this.getConfigTags(config);\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      var tokens = this.parse(indentedValue, tags);\n      return this.renderTokens(tokens, context, partials, indentedValue, config);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context, config) {\n    var escape = this.getConfigEscape(config) || mustache.escape;\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return (typeof value === 'number' && escape === mustache.escape) ? String(value) : escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  Writer.prototype.getConfigTags = function getConfigTags (config) {\n    if (isArray(config)) {\n      return config;\n    }\n    else if (config && typeof config === 'object') {\n      return config.tags;\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  Writer.prototype.getConfigEscape = function getConfigEscape (config) {\n    if (config && typeof config === 'object' && !isArray(config)) {\n      return config.escape;\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  var mustache = {\n    name: 'mustache.js',\n    version: '4.2.0',\n    tags: [ '{{', '}}' ],\n    clearCache: undefined,\n    escape: undefined,\n    parse: undefined,\n    render: undefined,\n    Scanner: undefined,\n    Context: undefined,\n    Writer: undefined,\n    /**\n     * Allows a user to override the default caching strategy, by providing an\n     * object with set, get and clear methods. This can also be used to disable\n     * the cache by setting it to the literal `undefined`.\n     */\n    set templateCache (cache) {\n      defaultWriter.templateCache = cache;\n    },\n    /**\n     * Gets the default or overridden caching object from the default writer.\n     */\n    get templateCache () {\n      return defaultWriter.templateCache;\n    }\n  };\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view`, `partials`, and `config`\n   * using the default writer.\n   */\n  mustache.render = function render (template, view, partials, config) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, config);\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","Mustache","isFunction","object","escapeRegExp","string","replace","hasProperty","obj","propName","parseTemplate","template","tags","stripSpace","hasTag","nonSpace","spaces","length","tokens","pop","compileTags","tagsToCompile","split","spaceRe","isArray","Error","openingTagRe","RegExp","closingTagRe","closingCurlyRe","lineHasNonSpace","sections","indentation","tagIndex","mustache","scanner","Scanner","type","value","token","eos","start","pos","scanUntil","i","valueLength","chr","charAt","regExpTest","call","nonSpaceRe","push","scan","tagRe","whiteRe","equalsRe","curlyRe","openSection","nestTokens","squashTokens","squashedTokens","lastToken","numTokens","nestedTokens","collector","section","tail","Context","view","parentContext","cache","parent","Writer","templateCache","_cache","set","key","get","clear","objectToString","Object","prototype","toString","Array","isArrayPolyfill","test","entityMap","Scanner.prototype.eos","Scanner.prototype.scan","re","match","index","substring","Scanner.prototype.scanUntil","search","Context.prototype.push","lookup","Context.prototype.lookup","name","hasOwnProperty","context","intermediateValue","names","lookupHit","indexOf","clearCache","Writer.prototype.clearCache","parse","Writer.prototype.parse","cacheKey","join","isCacheEnabled","undefined","render","Writer.prototype.render","partials","config","getConfigTags","renderTokens","Writer.prototype.renderTokens","originalTemplate","buffer","symbol","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","Writer.prototype.renderSection","subRender","j","slice","Writer.prototype.renderInverted","indentPartial","Writer.prototype.indentPartial","partial","filteredIndentation","partialByNl","Writer.prototype.renderPartial","indentedValue","Writer.prototype.unescapedValue","Writer.prototype.escapedValue","escape","getConfigEscape","String","Writer.prototype.rawValue","Writer.prototype.getConfigTags","Writer.prototype.getConfigEscape","version","defaultWriter","mustache.clearCache","mustache.parse","mustache.render","TypeError","escapeHtml","fromEntityMap","s"]
}
