{
"version":3,
"file":"module$node_modules$$mui$utils$deepmerge.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAUrGC,QAASA,cAAa,CAACC,IAAD,CAAO,CAC3B,MAAgB,KAAhB,GAAOA,IAAP,EAAwC,QAAxC,GAAwB,MAAOA,KAA/B,EAAoDA,IAAKC,CAAAA,WAAzD,GAAyEC,MAD9C,CAG7BC,QAASA,UAAS,CAACC,MAAD,CAASC,MAAT,CAAiBC,OAAA,CAAU,CAC3CC,MAAO,CAAA,CADoC,CAA3B,CAEf,CACD,MAAMC,OAASF,OAAQC,CAAAA,KAAR,CAAgB,GAAIE,SAAUC,CAAAA,OAAd,EAAuB,EAAvB,CAA2BN,MAA3B,CAAhB,CAAqDA,MAChEL,cAAA,CAAcK,MAAd,CAAJ,EAA6BL,aAAA,CAAcM,MAAd,CAA7B,EACEH,MAAOS,CAAAA,IAAP,CAAYN,MAAZ,CAAoBO,CAAAA,OAApB,CAA4BC,GAAA,EAAO,CAErB,WAAZ,GAAIA,GAAJ,GAGId,aAAA,CAAcM,MAAA,CAAOQ,GAAP,CAAd,CAAJ,EAAkCA,GAAlC,GAAyCT,OAAzC,EAAmDL,aAAA,CAAcK,MAAA,CAAOS,GAAP,CAAd,CAAnD,CAEEL,MAAA,CAAOK,GAAP,CAFF,CAEgBV,SAAA,CAAUC,MAAA,CAAOS,GAAP,CAAV;AAAuBR,MAAA,CAAOQ,GAAP,CAAvB,CAAoCP,OAApC,CAFhB,CAIEE,MAAA,CAAOK,GAAP,CAJF,CAIgBR,MAAA,CAAOQ,GAAP,CAPhB,CAFiC,CAAnC,CAaF,OAAOL,OAhBN,CAZCM,MAAAA,CAAyBlB,OAAA,CAAQ,kEAAR,CAC7BM,OAAOa,CAAAA,cAAP,CAAsBjB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CkB,MAAO,CAAA,CADoC,CAA7C,CAGAlB,QAAQY,CAAAA,OAAR,CAAkBP,SAClBL,QAAQC,CAAAA,aAAR,CAAwBA,aACxB,KAAIU,UAAYK,MAAA,CAAuBlB,OAAA,CAAQ,oDAAR,CAAvB,CATqF;",
"sources":["node_modules/@mui/utils/deepmerge.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$utils$deepmerge\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deepmerge;\nexports.isPlainObject = isPlainObject;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nfunction isPlainObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\nfunction deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? (0, _extends2.default)({}, target) : target;\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n  return output;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","isPlainObject","item","constructor","Object","deepmerge","target","source","options","clone","output","_extends2","default","keys","forEach","key","_interopRequireDefault","defineProperty","value"]
}
