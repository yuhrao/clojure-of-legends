{
"version":3,
"file":"module$node_modules$axios$lib$platform$browser$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYjHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CATrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAEnBI,OAAAA,CAAmBP,sBAAA,CAAuBH,OAAA,CAAQ,wEAAR,CAAvB,CAEnBW,QAAAA,CAAYR,sBAAA,CAAuBH,OAAA,CAAQ,iEAAR,CAAvB,CAqBVY,OAAAA,CAAwB,CAAA,EAAA,EAAM,CAClC,IAAIC,OAEJ;MAAyB,WAAzB,GAAI,MAAOC,UAAX,EAA2E,aAA3E,IAA0CD,OAA1C,CAAoDC,SAAUD,CAAAA,OAA9D,GAAwG,cAAxG,GAA4FA,OAA5F,EAAsI,IAAtI,GAA0HA,OAA1H,CAIyB,WAJzB,GAIO,MAAOE,OAJd,EAI4D,WAJ5D,GAIwC,MAAOC,SAJ/C,CACS,CAAA,CAJyB,CAAN,CAAD,EAmC7Bd,QAAQI,CAAAA,OAAR,CAXeW,CACbC,UAAW,CAAA,CADED,CAEbE,QAAS,CACPC,gBAAiBV,MAAiBJ,CAAAA,OAD3B,CAEPe,SAAUV,OAAUL,CAAAA,OAFb,CAGPgB,IAHO,CAFIL,CAObL,qBAAAA,MAPaK,CAQbM,8BAXoC,WAWpCA,GAXO,MAAOC,kBAWdD,EAXmDE,IAWnDF,WAXmEC,kBAWnED,EAXsH,UAWtHA,GAXwF,MAAOE,KAAKC,CAAAA,aAGvFT,CASbU,UAAW,+BAAA,CAAA,KAAA,CAAA,GAAA,CATEV,CAvDkG;",
"sources":["node_modules/axios/lib/platform/browser/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$platform$browser$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _URLSearchParams = _interopRequireDefault(require(\"./classes/URLSearchParams.js\"));\n\nvar _FormData = _interopRequireDefault(require(\"./classes/FormData.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n\n  if (typeof navigator !== 'undefined' && ((product = navigator.product) === 'ReactNative' || product === 'NativeScript' || product === 'NS')) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n\n\nconst isStandardBrowserWebWorkerEnv = (() => {\n  return typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof self.importScripts === 'function';\n})();\n\nvar _default = {\n  isBrowser: true,\n  classes: {\n    URLSearchParams: _URLSearchParams.default,\n    FormData: _FormData.default,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_URLSearchParams","_FormData","isStandardBrowserEnv","product","navigator","window","document","_default","isBrowser","classes","URLSearchParams","FormData","Blob","isStandardBrowserWebWorkerEnv","WorkerGlobalScope","self","importScripts","protocols"]
}
