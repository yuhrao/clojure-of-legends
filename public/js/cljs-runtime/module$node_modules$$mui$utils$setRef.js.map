{
"version":3,
"file":"module$node_modules$$mui$utils$setRef.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlGC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAcAC,QAAe,CAACC,GAAD,CAAMH,KAAN,CAAa,CACP,UAAnB,GAAI,MAAOG,IAAX,CACEA,GAAA,CAAIH,KAAJ,CADF,CAEWG,GAFX,GAGEA,GAAIC,CAAAA,OAHN,CAGgBJ,KAHhB,CAD0B,CApBsE;",
"sources":["node_modules/@mui/utils/setRef.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$utils$setRef\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setRef;\n/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nfunction setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","setRef","ref","current"]
}
