shadow$provide.module$node_modules$$mui$material$node$Select$SelectInput=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;
if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,
desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}function areEqualValues(a,b){return"object"===typeof b&&null!==b?a===b:String(a)===String(b)}var _interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutPropertiesLoose2=
_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose"));global=require("module$node_modules$$mui$utils$index");var React=_interopRequireWildcard(require("module$node_modules$react$index")),_reactIs=require("module$node_modules$react_is$index");module=_interopRequireDefault(require("module$node_modules$prop_types$index"));var _clsx=_interopRequireDefault(require("module$node_modules$clsx$dist$clsx")),_base=require("module$node_modules$$mui$base$node$index"),
_ownerDocument=_interopRequireDefault(require("module$node_modules$$mui$material$node$utils$ownerDocument")),_capitalize=_interopRequireDefault(require("module$node_modules$$mui$material$node$utils$capitalize")),_Menu=_interopRequireDefault(require("module$node_modules$$mui$material$node$Menu$Menu")),_NativeSelectInput=require("module$node_modules$$mui$material$node$NativeSelect$NativeSelectInput"),_utils2=require("module$node_modules$$mui$material$node$InputBase$utils"),_styled=_interopRequireWildcard(require("module$node_modules$$mui$material$node$styles$styled")),
_useForkRef=_interopRequireDefault(require("module$node_modules$$mui$material$node$utils$useForkRef")),_useControlled=_interopRequireDefault(require("module$node_modules$$mui$material$node$utils$useControlled")),_selectClasses=_interopRequireWildcard(require("module$node_modules$$mui$material$node$Select$selectClasses")),_jsxRuntime=require("module$node_modules$react$jsx_runtime"),_span;const _excluded="aria-describedby aria-label autoFocus autoWidth children className defaultOpen defaultValue disabled displayEmpty IconComponent inputRef labelId MenuProps multiple name onBlur onChange onClose onFocus onOpen open readOnly renderValue SelectDisplayProps tabIndex type value variant".split(" "),
SelectSelect=(0,_styled.default)("div",{name:"MuiSelect",slot:"Select",overridesResolver:(props,styles)=>{({ownerState:props}=props);return[{[`&.${_selectClasses.default.select}`]:styles.select},{[`&.${_selectClasses.default.select}`]:styles[props.variant]},{[`&.${_selectClasses.default.multiple}`]:styles.multiple}]}})(_NativeSelectInput.nativeSelectSelectStyles,{[`&.${_selectClasses.default.select}`]:{height:"auto",minHeight:"1.4375em",textOverflow:"ellipsis",whiteSpace:"nowrap",overflow:"hidden"}}),
SelectIcon=(0,_styled.default)("svg",{name:"MuiSelect",slot:"Icon",overridesResolver:(props,styles)=>{({ownerState:props}=props);return[styles.icon,props.variant&&styles[`icon${(0,_capitalize.default)(props.variant)}`],props.open&&styles.iconOpen]}})(_NativeSelectInput.nativeSelectIconStyles),SelectNativeInput=(0,_styled.default)("input",{shouldForwardProp:prop=>(0,_styled.slotShouldForwardProp)(prop)&&"classes"!==prop,name:"MuiSelect",slot:"NativeInput",overridesResolver:(props,styles)=>styles.nativeInput})({bottom:0,
left:0,position:"absolute",opacity:0,pointerEvents:"none",width:"100%",boxSizing:"border-box"}),useUtilityClasses=ownerState=>{const {classes,variant,disabled,multiple,open}=ownerState;ownerState={select:["select",variant,disabled&&"disabled",multiple&&"multiple"],icon:["icon",`icon${(0,_capitalize.default)(variant)}`,open&&"iconOpen",disabled&&"disabled"],nativeInput:["nativeInput"]};return(0,_base.unstable_composeClasses)(ownerState,_selectClasses.getSelectUtilityClasses,classes)};require=React.forwardRef(function(props,
ref){const {"aria-describedby":ariaDescribedby,"aria-label":ariaLabel,autoFocus,autoWidth,children,className,defaultOpen,defaultValue,disabled,displayEmpty,IconComponent,inputRef:inputRefProp,labelId,MenuProps={},multiple,name,onBlur,onChange,onClose,onFocus,onOpen,open:openProp,readOnly,renderValue,SelectDisplayProps={},tabIndex:tabIndexProp,value:valueProp,variant="standard"}=props,other=(0,_objectWithoutPropertiesLoose2.default)(props,_excluded),[value,setValueState]=(0,_useControlled.default)({controlled:valueProp,
default:defaultValue,name:"Select"}),[openState,setOpenState]=(0,_useControlled.default)({controlled:openProp,default:defaultOpen,name:"Select"}),inputRef=React.useRef(null),displayRef=React.useRef(null),[displayNode,setDisplayNode]=React.useState(null),{current:isOpenControlled}=React.useRef(null!=openProp),[menuMinWidthState,setMenuMinWidthState]=React.useState();var handleRef=(0,_useForkRef.default)(ref,inputRefProp);ref=React.useCallback(node=>{(displayRef.current=node)&&setDisplayNode(node)},
[]);React.useImperativeHandle(handleRef,()=>({focus:()=>{displayRef.current.focus()},node:inputRef.current,value}),[value]);React.useEffect(()=>{defaultOpen&&openState&&displayNode&&!isOpenControlled&&(setMenuMinWidthState(autoWidth?null:displayNode.clientWidth),displayRef.current.focus())},[displayNode,autoWidth]);React.useEffect(()=>{autoFocus&&displayRef.current.focus()},[autoFocus]);React.useEffect(()=>{if(labelId){var label=(0,_ownerDocument.default)(displayRef.current).getElementById(labelId);
if(label){const handler=()=>{getSelection().isCollapsed&&displayRef.current.focus()};label.addEventListener("click",handler);return()=>{label.removeEventListener("click",handler)}}}},[labelId]);const update=(open,event)=>{open?onOpen&&onOpen(event):onClose&&onClose(event);isOpenControlled||(setMenuMinWidthState(autoWidth?null:displayNode.clientWidth),setOpenState(open))};handleRef=event=>{0===event.button&&(event.preventDefault(),displayRef.current.focus(),update(!0,event))};const childrenArray=React.Children.toArray(children),
handleItemClick=child=>event=>{let newValue;if(event.currentTarget.hasAttribute("tabindex")){if(multiple){newValue=Array.isArray(value)?value.slice():[];var itemIndex=value.indexOf(child.props.value);-1===itemIndex?newValue.push(child.props.value):newValue.splice(itemIndex,1)}else newValue=child.props.value;if(child.props.onClick)child.props.onClick(event);value!==newValue&&(setValueState(newValue),onChange&&(itemIndex=event.nativeEvent||event,itemIndex=new itemIndex.constructor(itemIndex.type,itemIndex),
Object.defineProperty(itemIndex,"target",{writable:!0,value:{value:newValue,name}}),onChange(itemIndex,child)));multiple||update(!1,event)}},open$jscomp$0=null!==displayNode&&openState;delete other["aria-invalid"];let display,displaySingle;const displayMultiple=[];let computeDisplay=!1,foundMatch=!1;if((0,_utils2.isFilled)({value})||displayEmpty)renderValue?display=renderValue(value):computeDisplay=!0;const items=childrenArray.map((child,index,arr)=>{if(!React.isValidElement(child))return null;(0,_reactIs.isFragment)(child)&&
console.error("MUI: The Select component doesn't accept a Fragment as a child.\nConsider providing an array instead.");let selected;if(multiple){if(!Array.isArray(value))throw Error("MUI: The `value` prop must be an array when using the `Select` component with `multiple`.");(selected=value.some(v=>areEqualValues(v,child.props.value)))&&computeDisplay&&displayMultiple.push(child.props.children)}else(selected=areEqualValues(value,child.props.value))&&computeDisplay&&(displaySingle=child.props.children);
selected&&(foundMatch=!0);if(void 0===child.props.value)return React.cloneElement(child,{"aria-readonly":!0,role:"option"});index=()=>{if(value)return selected;const firstSelectableElement=arr.find(item=>void 0!==item.props.value&&!0!==item.props.disabled);return child===firstSelectableElement?!0:selected};return React.cloneElement(child,{"aria-selected":selected?"true":"false",onClick:handleItemClick(child),onKeyUp:event=>{" "===event.key&&event.preventDefault();if(child.props.onKeyUp)child.props.onKeyUp(event)},
role:"option",selected:void 0===arr[0].props.value||!0===arr[0].props.disabled?index():selected,value:void 0,"data-value":child.props.value})});React.useEffect(()=>{if(!foundMatch&&!multiple&&""!==value){const values=childrenArray.map(child=>child.props.value);console.warn([`MUI: You have provided an out-of-range value \`${value}\` for the select ${name?`(name="${name}") `:""}component.`,"Consider providing a value that matches one of the available options or ''.",`The available values are ${values.filter(x=>
null!=x).map(x=>`\`${x}\``).join(", ")||'""'}.`].join("\n"))}},[foundMatch,childrenArray,multiple,name,value]);computeDisplay&&(display=multiple?0===displayMultiple.length?null:displayMultiple.reduce((output,child,index)=>{output.push(child);index<displayMultiple.length-1&&output.push(", ");return output},[]):displaySingle);let menuMinWidth=menuMinWidthState;!autoWidth&&isOpenControlled&&displayNode&&(menuMinWidth=displayNode.clientWidth);let tabIndex;tabIndex="undefined"!==typeof tabIndexProp?tabIndexProp:
disabled?null:0;const buttonId=SelectDisplayProps.id||(name?`mui-component-select-${name}`:void 0);props=(0,_extends2.default)({},props,{variant,value,open:open$jscomp$0});const classes=useUtilityClasses(props);return(0,_jsxRuntime.jsxs)(React.Fragment,{children:[(0,_jsxRuntime.jsx)(SelectSelect,(0,_extends2.default)({ref,tabIndex,role:"button","aria-disabled":disabled?"true":void 0,"aria-expanded":open$jscomp$0?"true":"false","aria-haspopup":"listbox","aria-label":ariaLabel,"aria-labelledby":[labelId,
buttonId].filter(Boolean).join(" ")||void 0,"aria-describedby":ariaDescribedby,onKeyDown:event=>{readOnly||-1===[" ","ArrowUp","ArrowDown","Enter"].indexOf(event.key)||(event.preventDefault(),update(!0,event))},onMouseDown:disabled||readOnly?null:handleRef,onBlur:event=>{!open$jscomp$0&&onBlur&&(Object.defineProperty(event,"target",{writable:!0,value:{value,name}}),onBlur(event))},onFocus},SelectDisplayProps,{ownerState:props,className:(0,_clsx.default)(SelectDisplayProps.className,classes.select,
className),id:buttonId,children:null==display||"string"===typeof display&&!display.trim()?_span||(_span=(0,_jsxRuntime.jsx)("span",{className:"notranslate",children:"​"})):display})),(0,_jsxRuntime.jsx)(SelectNativeInput,(0,_extends2.default)({value:Array.isArray(value)?value.join(","):value,name,ref:inputRef,"aria-hidden":!0,onChange:event=>{var index=childrenArray.map(child=>child.props.value).indexOf(event.target.value);-1!==index&&(index=childrenArray[index],setValueState(index.props.value),onChange&&
onChange(event,index))},tabIndex:-1,disabled,className:classes.nativeInput,autoFocus,ownerState:props},other)),(0,_jsxRuntime.jsx)(SelectIcon,{as:IconComponent,className:classes.icon,ownerState:props}),(0,_jsxRuntime.jsx)(_Menu.default,(0,_extends2.default)({id:`menu-${name||""}`,anchorEl:displayNode,open:open$jscomp$0,onClose:event=>{update(!1,event)},anchorOrigin:{vertical:"bottom",horizontal:"center"},transformOrigin:{vertical:"top",horizontal:"center"}},MenuProps,{MenuListProps:(0,_extends2.default)({"aria-labelledby":labelId,
role:"listbox",disableListWrap:!0},MenuProps.MenuListProps),PaperProps:(0,_extends2.default)({},MenuProps.PaperProps,{style:(0,_extends2.default)({minWidth:menuMinWidth},null!=MenuProps.PaperProps?MenuProps.PaperProps.style:null)}),children:items}))]})});require.propTypes={"aria-describedby":module.default.string,"aria-label":module.default.string,autoFocus:module.default.bool,autoWidth:module.default.bool,children:module.default.node,classes:module.default.object,className:module.default.string,
defaultOpen:module.default.bool,defaultValue:module.default.any,disabled:module.default.bool,displayEmpty:module.default.bool,IconComponent:module.default.elementType.isRequired,inputRef:global.refType,labelId:module.default.string,MenuProps:module.default.object,multiple:module.default.bool,name:module.default.string,onBlur:module.default.func,onChange:module.default.func,onClose:module.default.func,onFocus:module.default.func,onOpen:module.default.func,open:module.default.bool,readOnly:module.default.bool,
renderValue:module.default.func,SelectDisplayProps:module.default.object,tabIndex:module.default.oneOfType([module.default.number,module.default.string]),type:module.default.any,value:module.default.any,variant:module.default.oneOf(["standard","outlined","filled"])};exports.default=require}
//# sourceMappingURL=module$node_modules$$mui$material$node$Select$SelectInput.js.map
