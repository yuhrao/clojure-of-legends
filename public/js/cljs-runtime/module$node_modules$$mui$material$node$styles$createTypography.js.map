{
"version":3,
"file":"module$node_modules$$mui$material$node$styles$createTypography.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@mui/material/node/styles/createTypography.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$material$node$styles$createTypography\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTypography;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _utils = require(\"@mui/utils\");\nconst _excluded = [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"];\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\nconst caseAllCaps = {\n  textTransform: 'uppercase'\n};\nconst defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n\n/**\n * @see @link{https://m2.material.io/design/typography/the-type-system.html}\n * @see @link{https://m2.material.io/design/typography/understanding-typography.html}\n */\nfunction createTypography(palette, typography) {\n  const _ref = typeof typography === 'function' ? typography(palette) : typography,\n    {\n      fontFamily = defaultFontFamily,\n      // The default font size of the Material Specification.\n      fontSize = 14,\n      // px\n      fontWeightLight = 300,\n      fontWeightRegular = 400,\n      fontWeightMedium = 500,\n      fontWeightBold = 700,\n      // Tell MUI what's the font-size on the html element.\n      // 16px is the default font-size used by browsers.\n      htmlFontSize = 16,\n      // Apply the CSS properties to all the variants.\n      allVariants,\n      pxToRem: pxToRem2\n    } = _ref,\n    other = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('MUI: `fontSize` is required to be a number.');\n    }\n    if (typeof htmlFontSize !== 'number') {\n      console.error('MUI: `htmlFontSize` is required to be a number.');\n    }\n  }\n  const coef = fontSize / 14;\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => (0, _extends2.default)({\n    fontFamily,\n    fontWeight,\n    fontSize: pxToRem(size),\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n    lineHeight\n  }, fontFamily === defaultFontFamily ? {\n    letterSpacing: `${round(letterSpacing / size)}em`\n  } : {}, casing, allVariants);\n  const variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)\n  };\n  return (0, _utils.deepmerge)((0, _extends2.default)({\n    htmlFontSize,\n    pxToRem,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n  });\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","default","createTypography","palette","typography","_ref","fontFamily","defaultFontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem2","other","_objectWithoutPropertiesLoose2","_excluded","console","error","coef","pxToRem","size","buildVariant","fontWeight","lineHeight","letterSpacing","casing","_extends2","Math","round","variants","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caseAllCaps","caption","overline","_utils","deepmerge","clone","textTransform"]
}
