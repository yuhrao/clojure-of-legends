{
"version":3,
"file":"module$node_modules$react_transition_group$cjs$CSSTransition.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/react-transition-group/cjs/CSSTransition.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_transition_group$cjs$CSSTransition\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _addClass2 = _interopRequireDefault(require(\"dom-helpers/addClass\"));\n\nvar _removeClass = _interopRequireDefault(require(\"dom-helpers/removeClass\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nvar _reflow = require(\"./utils/reflow\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass2.default)(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass.default)(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) (0, _reflow.forceReflow)(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/_react.default.createElement(_Transition.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react.default.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, _Transition.default.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: _propTypes.default.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: _propTypes.default.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: _propTypes.default.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: _propTypes.default.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: _propTypes.default.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: _propTypes.default.func\n}) : {};\nvar _default = CSSTransition;\nexports.default = _default;\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_propTypes","_addClass2","_removeClass","_react","_Transition","_PropTypes","_reflow","_addClass","node","classes","split","forEach","c","removeClass","CSSTransition","_React$Component","_this","_len","args","Array","_key","concat","appliedClasses","appear","enter","exit","onEnter","_this.onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","props","onEntering","_this.onEntering","_this$resolveArgument2","type","onEntered","_this.onEntered","_this$resolveArgument3","onExit","_this.onExit","_this$resolveArgument4","onExiting","_this.onExiting","_this$resolveArgument5","onExited","_this.onExited","_this$resolveArgument6","_this.resolveArguments","nodeRef","current","getClassNames","_this.getClassNames","classNames","isStringClassNames","baseClassName","prefix","activeClassName","doneClassName","_proto","_proto.addClass","phase","className","_this$getClassNames","forceReflow","_proto.removeClasses","_this$appliedClasses$","base","active","done","render","_proto.render","_this$props","sourceKeys","keys","excluded","indexOf","createElement","Component","defaultProps","propTypes","classNamesShape","func"]
}
