shadow$provide.module$node_modules$$emotion$react$dist$emotion_react_cjs_dev=function(global,require,module,exports){function css$jscomp$0(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return serialize.serializeStyles(args)}Object.defineProperty(exports,"__esModule",{value:!0});var React=require("module$node_modules$react$index");require("module$node_modules$$emotion$cache$dist$emotion_cache_cjs");var emotionElement=require("module$node_modules$$emotion$react$dist$emotion_element_b63ca7c6_cjs_dev");
require("module$node_modules$$babel$runtime$helpers$extends");require("module$node_modules$$emotion$weak_memoize$dist$emotion_weak_memoize_cjs");require("module$node_modules$hoist_non_react_statics$dist$hoist_non_react_statics_cjs");require("module$node_modules$$emotion$react$_isolated_hnrs$dist$emotion_react__isolated_hnrs_cjs_dev");var utils=require("module$node_modules$$emotion$utils$dist$emotion_utils_cjs"),serialize=require("module$node_modules$$emotion$serialize$dist$emotion_serialize_cjs"),
useInsertionEffectWithFallbacks=require("module$node_modules$$emotion$use_insertion_effect_with_fallbacks$dist$emotion_use_insertion_effect_with_fallbacks_cjs");require=function(type,props){var args=arguments;if(null==props||!emotionElement.hasOwnProperty.call(props,"css"))return React.createElement.apply(void 0,args);var argsLength=args.length,createElementArgArray=Array(argsLength);createElementArgArray[0]=emotionElement.Emotion;createElementArgArray[1]=emotionElement.createEmotionProps(type,props);
for(var i=2;i<argsLength;i++)createElementArgArray[i]=args[i];return React.createElement.apply(null,createElementArgArray)};var warnedAboutCssPropForGlobal=!1;module=emotionElement.withEmotionCache(function(props,cache){warnedAboutCssPropForGlobal||!props.className&&!props.css||(console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?"),warnedAboutCssPropForGlobal=!0);var serialized=serialize.serializeStyles([props.styles],void 0,React.useContext(emotionElement.ThemeContext));
if(!emotionElement.isBrowser){var _ref;props=serialized.name;for(var serializedStyles=serialized.styles,next=serialized.next;void 0!==next;)props+=" "+next.name,serializedStyles+=next.styles,next=next.next;next=!0===cache.compat;serializedStyles=cache.insert("",{name:props,styles:serializedStyles},cache.sheet,next);return next?null:React.createElement("style",(_ref={},_ref["data-emotion"]=cache.key+"-global "+props,_ref.dangerouslySetInnerHTML={__html:serializedStyles},_ref.nonce=cache.sheet.nonce,
_ref))}var sheetRef=React.useRef();useInsertionEffectWithFallbacks.useInsertionEffectWithLayoutFallback(function(){var key=cache.key+"-global",sheet=new cache.sheet.constructor({key,nonce:cache.sheet.nonce,container:cache.sheet.container,speedy:cache.sheet.isSpeedy}),rehydrating=!1,node=document.querySelector('style[data-emotion\x3d"'+key+" "+serialized.name+'"]');cache.sheet.tags.length&&(sheet.before=cache.sheet.tags[0]);null!==node&&(rehydrating=!0,node.setAttribute("data-emotion",key),sheet.hydrate([node]));
sheetRef.current=[sheet,rehydrating];return function(){sheet.flush()}},[cache]);useInsertionEffectWithFallbacks.useInsertionEffectWithLayoutFallback(function(){var sheetRefCurrent=sheetRef.current,sheet=sheetRefCurrent[0];sheetRefCurrent[1]?sheetRefCurrent[1]=!1:(void 0!==serialized.next&&utils.insertStyles(cache,serialized.next,!0),sheet.tags.length&&(sheet.before=sheet.tags[sheet.tags.length-1].nextElementSibling,sheet.flush()),cache.insert("",serialized,sheet,!1))},[cache,serialized.name]);return null});
module.displayName="EmotionGlobal";var classnames$jscomp$0=function classnames(args){for(var len=args.length,i=0,cls="";i<len;i++){var arg=args[i];if(null!=arg){var toAdd=void 0;switch(typeof arg){case "boolean":break;case "object":if(Array.isArray(arg))toAdd=classnames(arg);else{void 0!==arg.styles&&void 0!==arg.name&&console.error("You have passed styles created with `css` from `@emotion/react` package to the `cx`.\n`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from \x3cClassNames/\x3e component.");
toAdd="";for(var k in arg)arg[k]&&k&&(toAdd&&(toAdd+=" "),toAdd+=k)}break;default:toAdd=arg}toAdd&&(cls&&(cls+=" "),cls+=toAdd)}}return cls},Insertion=function(_ref){var cache=_ref.cache,serializedArr=_ref.serializedArr;_ref=useInsertionEffectWithFallbacks.useInsertionEffectAlwaysWithSyncFallback(function(){for(var rules="",i=0;i<serializedArr.length;i++){var res=utils.insertStyles(cache,serializedArr[i],!1);emotionElement.isBrowser||void 0===res||(rules+=res)}if(!emotionElement.isBrowser)return rules});
if(!emotionElement.isBrowser&&0!==_ref.length){var _ref2;return React.createElement("style",(_ref2={},_ref2["data-emotion"]=cache.key+" "+serializedArr.map(function(serialized){return serialized.name}).join(" "),_ref2.dangerouslySetInnerHTML={__html:_ref},_ref2.nonce=cache.sheet.nonce,_ref2))}return null},ClassNames=emotionElement.withEmotionCache(function(props,cache){var hasRendered=!1,serializedArr=[],css=function(){if(hasRendered)throw Error("css can only be used during render");for(var _len=
arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];_len=serialize.serializeStyles(args,cache.registered);serializedArr.push(_len);utils.registerStyles(cache,_len,!1);return cache.key+"-"+_len.name},content={css,cx:function(){if(hasRendered)throw Error("cx can only be used during render");for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];_len2=classnames$jscomp$0(args);args=[];_key2=utils.getRegisteredStyles(cache.registered,
args,_len2);_len2=2>args.length?_len2:_key2+css(args);return _len2},theme:React.useContext(emotionElement.ThemeContext)};props=props.children(content);hasRendered=!0;return React.createElement(React.Fragment,null,React.createElement(Insertion,{cache,serializedArr}),props)});ClassNames.displayName="EmotionClassNames";var isBrowser="undefined"!==typeof document,isTestEnv="undefined"!==typeof jest||"undefined"!==typeof vi;isBrowser&&!isTestEnv&&(global="undefined"!==typeof globalThis?globalThis:isBrowser?
window:global,global.__EMOTION_REACT_11__&&console.warn("You are loading @emotion/react when it is already loaded. Running multiple instances may cause problems. This can happen if multiple versions are used, or if multiple builds of the same version are used."),global.__EMOTION_REACT_11__=!0);exports.CacheProvider=emotionElement.CacheProvider;exports.ThemeContext=emotionElement.ThemeContext;exports.ThemeProvider=emotionElement.ThemeProvider;exports.__unsafe_useEmotionCache=emotionElement.__unsafe_useEmotionCache;
exports.useTheme=emotionElement.useTheme;Object.defineProperty(exports,"withEmotionCache",{enumerable:!0,get:function(){return emotionElement.withEmotionCache}});exports.withTheme=emotionElement.withTheme;exports.ClassNames=ClassNames;exports.Global=module;exports.createElement=require;exports.css=css$jscomp$0;exports.jsx=require;exports.keyframes=function(){var insertable=css$jscomp$0.apply(void 0,arguments),name="animation-"+insertable.name;return{name,styles:"@keyframes "+name+"{"+insertable.styles+
"}",anim:1,toString:function(){return"_EMO_"+this.name+"_"+this.styles+"_EMO_"}}}}
//# sourceMappingURL=module$node_modules$$emotion$react$dist$emotion_react_cjs_dev.js.map
