{"version":3,"sources":["api/lol/metadata.cljs"],"mappings":";;AAKA,gCAAA,hCAAMA,wEAAcC;AAApB,AACE,UAAA,2CAAA,uDAAA,MAAA,9GAAMC,gKACa,AAAA,0FAAA,AAAA,4FAAID;AADvB,AAIE,OAACE,mBAAaD;;AAElB,2CAAA,3CAAOE,8FAAyBH,WAAWI,QAAQC;AAAnD,AACE,OAACC,6CAAgB,AAAA,oGAAA,AAAA,4FAAIN,aAGJ,qBAAA,2CAAA,kEAAA,lIAACO,0HAAkBH,8DACAC;;AAGtC,iCAAA,oDAAAG,rFAAMI,0EAAeZ;AAArB,AAAA,IAAAS,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;cAAA,AAAAE,4CAAAF,eAAA,rEAAwCL;eAAxC,AAAAO,4CAAAF,eAAA,tEAAgDI;AAAhD,AACE,UAAA,2CAAA,uDAAA,MAAA,9GAAMZ,gKACa,AAACK,6CAAgB,AAAA,6FAAA,AAAA,4FAAIN,aAGJ,qBAAA,2CAAA,kEAAA,lIAACO,0HAAmBH,sEACAS;AALxD,uDAMM,AAACX,mBAAaD,1EACd,OAACa,wEACC,WAAKC;AAAL,AACE,IAAMC,qBAAmB,WAAKC;AAAL,AACE,IAAMC,UAAQ,+FAAA,9FAAK,AAAA,kFAAMD;IACnBE,QAAM,AAAChB,yCACCH,WACAI,QACA,AAAA,kFAAA,AAAA,oFAAIa;AAJlB,kFAOMA,tBACA,+BAAA,mFAAA,kDAAA,qDAAA,2DAAA,pRAACG,5DAKD,8YAAA,8GAAA,rfAACC,2bAAWH,gHACEC;;IACzCG,2FAGc,AAACC,4CAAI,WAAAC,vIAGL,6CAAA,7CAACK;AAHI,AAAA,IAAAJ,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAAME;eAAN,AAAAD,4CAAAD,WAAA,IAAA,tEAAQR;AAAR,AACE,IAAMW,IAAE,AAACZ,mBAAmBC;AAA5B,AAAA,0FACG,AAAA,kFAAMW,GAAGA;yKALnBb,tKAGA,AAAA,mFAAA,AAAA;AAnBpB,AAuBE,yDAAA,lDAACM,8CAAMN,yDAAUO","names":["api.lol.metadata/get-versions","lol-client","req","utils.http/request","api.lol.metadata/build-champion-icon-url","version","image-name","js/module$node_modules$mustache$mustache.render","cljs.core/clj->js","p__28785","map__28786","cljs.core/--destructure-map","cljs.core.get","api.lol.metadata/get-champions","language","promesa.core.then","res","normalize-champion","champion","new-key","image","cljs.core/select-keys","cljs.core.assoc","new-data","cljs.core.map","p__28787","vec__28788","cljs.core.nth","_","c","cljs.core.into"],"sourcesContent":["(ns api.lol.metadata\n  (:require [utils.http :as http]\n            [\"mustache\" :as mustache]\n            [promesa.core :as promesa]))\n\n(defn get-versions [lol-client]\n  (let [req {:method \"get\"\n             :url    (-> lol-client\n                         :endpoints\n                         :versions)}]\n    (http/request req)))\n\n(defn- build-champion-icon-url [lol-client version image-name]\n  (mustache/render (-> lol-client\n                       :endpoints\n                       :champion-icon)\n                   (clj->js {:version version\n                             :image   image-name})))\n\n\n(defn get-champions [lol-client {:keys [version language]}]\n  (let [req {:method \"get\"\n             :url    (mustache/render (-> lol-client\n                                          :endpoints\n                                          :champions)\n                                      (clj->js {:version  version\n                                                :language language}))}]\n    (-> (http/request req)\n        (promesa/then\n          (fn [res]\n            (let [normalize-champion (fn [champion]\n                                       (let [new-key (int (:key champion))\n                                             image (build-champion-icon-url\n                                                     lol-client\n                                                     version\n                                                     (-> champion\n                                                         :image\n                                                         :full))]\n                                         (-> champion\n                                             (select-keys\n                                               [:id\n                                                :tags\n                                                :partype\n                                                :name])\n                                             (assoc :key new-key\n                                                    :image image))))\n                  new-data (->> res\n                                :data\n                                :data\n                                (map (fn [[_ champion]]\n                                       (let [c (normalize-champion champion)]\n                                         [(:key c) c])))\n                                (into {}))]\n              (assoc res :data new-data)))))))\n\n\n;; TODO: Get items and build their image URL\n;; Get game modes & types\n;; Get summoner spells and their images"]}