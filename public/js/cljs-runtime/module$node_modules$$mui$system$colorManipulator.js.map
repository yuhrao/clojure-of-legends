{
"version":3,
"file":"module$node_modules$$mui$system$colorManipulator.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/@mui/system/colorManipulator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$system$colorManipulator\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.alpha = alpha;\nexports.colorChannel = void 0;\nexports.darken = darken;\nexports.decomposeColor = decomposeColor;\nexports.emphasize = emphasize;\nexports.getContrastRatio = getContrastRatio;\nexports.getLuminance = getLuminance;\nexports.hexToRgb = hexToRgb;\nexports.hslToRgb = hslToRgb;\nexports.lighten = lighten;\nexports.private_safeAlpha = private_safeAlpha;\nexports.private_safeColorChannel = void 0;\nexports.private_safeDarken = private_safeDarken;\nexports.private_safeEmphasize = private_safeEmphasize;\nexports.private_safeLighten = private_safeLighten;\nexports.recomposeColor = recomposeColor;\nexports.rgbToHex = rgbToHex;\nvar _utils = require(\"@mui/utils\");\n/**\n * Returns a number whose value is limited to the given range.\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value, min = 0, max = 1) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);\n    }\n  }\n  return Math.min(Math.max(min, value), max);\n}\n\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\nfunction hexToRgb(color) {\n  color = color.slice(1);\n  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');\n  let colors = color.match(re);\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(n => n + n);\n  }\n  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', ')})` : '';\n}\nfunction intToHex(int) {\n  const hex = int.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\nfunction decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n  const marker = color.indexOf('(');\n  const type = color.substring(0, marker);\n  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Unsupported \\`${color}\\` color.\nThe following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : (0, _utils.formatMuiErrorMessage)(9, color));\n  }\n  let values = color.substring(marker + 1, color.length - 1);\n  let colorSpace;\n  if (type === 'color') {\n    values = values.split(' ');\n    colorSpace = values.shift();\n    if (values.length === 4 && values[3].charAt(0) === '/') {\n      values[3] = values[3].slice(1);\n    }\n    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: unsupported \\`${colorSpace}\\` color space.\nThe following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : (0, _utils.formatMuiErrorMessage)(10, colorSpace));\n    }\n  } else {\n    values = values.split(',');\n  }\n  values = values.map(value => parseFloat(value));\n  return {\n    type,\n    values,\n    colorSpace\n  };\n}\n\n/**\n * Returns a channel created from the input color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {string} - The channel for the color, that can be used in rgba or hsla colors\n */\nconst colorChannel = color => {\n  const decomposedColor = decomposeColor(color);\n  return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf('hsl') !== -1 && idx !== 0 ? `${val}%` : val).join(' ');\n};\nexports.colorChannel = colorChannel;\nconst private_safeColorChannel = (color, warning) => {\n  try {\n    return colorChannel(color);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n};\n\n/**\n * Converts a color object with type and values to a string.\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\nexports.private_safeColorChannel = private_safeColorChannel;\nfunction recomposeColor(color) {\n  const {\n    type,\n    colorSpace\n  } = color;\n  let {\n    values\n  } = color;\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = `${values[1]}%`;\n    values[2] = `${values[2]}%`;\n  }\n  if (type.indexOf('color') !== -1) {\n    values = `${colorSpace} ${values.join(' ')}`;\n  } else {\n    values = `${values.join(', ')}`;\n  }\n  return `${type}(${values})`;\n}\n\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\nfunction rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n  const {\n    values\n  } = decomposeColor(color);\n  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;\n}\n\n/**\n * Converts a color from hsl format to rgb format.\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\nfunction hslToRgb(color) {\n  color = decomposeColor(color);\n  const {\n    values\n  } = color;\n  const h = values[0];\n  const s = values[1] / 100;\n  const l = values[2] / 100;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  let type = 'rgb';\n  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n  return recomposeColor({\n    type,\n    values: rgb\n  });\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\nfunction getLuminance(color) {\n  color = decomposeColor(color);\n  let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(val => {\n    if (color.type !== 'color') {\n      val /= 255; // normalized\n    }\n\n    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;\n  });\n\n  // Truncate at 3 digits\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\nfunction getContrastRatio(foreground, background) {\n  const lumA = getLuminance(foreground);\n  const lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\n/**\n * Sets the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} value - value to set the alpha channel to in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nfunction alpha(color, value) {\n  color = decomposeColor(color);\n  value = clamp(value);\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n  if (color.type === 'color') {\n    color.values[3] = `/${value}`;\n  } else {\n    color.values[3] = value;\n  }\n  return recomposeColor(color);\n}\nfunction private_safeAlpha(color, value, warning) {\n  try {\n    return alpha(color, value);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darkens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nfunction darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nfunction private_safeDarken(color, coefficient, warning) {\n  try {\n    return darken(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Lightens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nfunction lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  } else if (color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (1 - color.values[i]) * coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nfunction private_safeLighten(color, coefficient, warning) {\n  try {\n    return lighten(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nfunction emphasize(color, coefficient = 0.15) {\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\nfunction private_safeEmphasize(color, coefficient, warning) {\n  try {\n    return private_safeEmphasize(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","clamp","value","min","max","console","error","Math","hexToRgb","color","slice","colors","match","re","RegExp","length","map","n","index","parseInt","round","join","decomposeColor","type","charAt","marker","indexOf","substring","Error","values","colorSpace","split","shift","parseFloat","recomposeColor","i","hslToRgb","h","l","a","f","k","rgb","push","getLuminance","val","Number","toFixed","alpha","darken","coefficient","lighten","private_safeEmphasize","warning","warn","Object","defineProperty","colorChannel","emphasize","getContrastRatio","foreground","background","lumA","lumB","private_safeAlpha","private_safeColorChannel","private_safeDarken","private_safeLighten","rgbToHex","hex","toString","int","decomposedColor","idx"]
}
