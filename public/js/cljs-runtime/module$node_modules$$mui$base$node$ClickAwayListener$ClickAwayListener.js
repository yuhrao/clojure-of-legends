shadow$provide.module$node_modules$$mui$base$node$ClickAwayListener$ClickAwayListener=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function ClickAwayListener(props){const {children,disableReactTree=!1,mouseEvent=
"onClick",onClickAway,touchEvent="onTouchEnd"}=props,movedRef=React.useRef(!1),nodeRef=React.useRef(null),activatedRef=React.useRef(!1),syntheticEventRef=React.useRef(!1);React.useEffect(()=>{setTimeout(()=>{activatedRef.current=!0},0);return()=>{activatedRef.current=!1}},[]);var handleRef=(0,_utils.unstable_useForkRef)(children.ref,nodeRef);const handleClickAway=(0,_utils.unstable_useEventCallback)(event=>{const insideReactTree=syntheticEventRef.current;syntheticEventRef.current=!1;const doc=(0,_utils.unstable_ownerDocument)(nodeRef.current);
!activatedRef.current||!nodeRef.current||"clientX"in event&&(doc.documentElement.clientWidth<event.clientX||doc.documentElement.clientHeight<event.clientY)||(movedRef.current?movedRef.current=!1:(event.composedPath?-1<event.composedPath().indexOf(nodeRef.current):!doc.documentElement.contains(event.target)||nodeRef.current.contains(event.target))||!disableReactTree&&insideReactTree||onClickAway(event))});props=handlerName=>event=>{syntheticEventRef.current=!0;const childrenPropsHandler=children.props[handlerName];
childrenPropsHandler&&childrenPropsHandler(event)};handleRef={ref:handleRef};!1!==touchEvent&&(handleRef[touchEvent]=props(touchEvent));React.useEffect(()=>{if(!1!==touchEvent){const mappedTouchEvent=touchEvent.substring(2).toLowerCase(),doc=(0,_utils.unstable_ownerDocument)(nodeRef.current),handleTouchMove=()=>{movedRef.current=!0};doc.addEventListener(mappedTouchEvent,handleClickAway);doc.addEventListener("touchmove",handleTouchMove);return()=>{doc.removeEventListener(mappedTouchEvent,handleClickAway);
doc.removeEventListener("touchmove",handleTouchMove)}}},[handleClickAway,touchEvent]);!1!==mouseEvent&&(handleRef[mouseEvent]=props(mouseEvent));React.useEffect(()=>{if(!1!==mouseEvent){const mappedMouseEvent=mouseEvent.substring(2).toLowerCase(),doc=(0,_utils.unstable_ownerDocument)(nodeRef.current);doc.addEventListener(mappedMouseEvent,handleClickAway);return()=>{doc.removeEventListener(mappedMouseEvent,handleClickAway)}}},[handleClickAway,mouseEvent]);return(0,_jsxRuntime.jsx)(React.Fragment,{children:React.cloneElement(children,
handleRef)})}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&
Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react$index"));global=global(require("module$node_modules$prop_types$index"));var _utils=require("module$node_modules$$mui$utils$index"),
_jsxRuntime=require("module$node_modules$react$jsx_runtime");ClickAwayListener.propTypes={children:_utils.elementAcceptingRef.isRequired,disableReactTree:global.default.bool,mouseEvent:global.default.oneOf(["onClick","onMouseDown","onMouseUp","onPointerDown","onPointerUp",!1]),onClickAway:global.default.func.isRequired,touchEvent:global.default.oneOf(["onTouchEnd","onTouchStart",!1])};ClickAwayListener.propTypes=(0,_utils.exactProp)(ClickAwayListener.propTypes);exports.default=ClickAwayListener}
//# sourceMappingURL=module$node_modules$$mui$base$node$ClickAwayListener$ClickAwayListener.js.map
