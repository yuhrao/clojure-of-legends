shadow$provide.module$node_modules$$mui$system$spacing=function(global,require,module,exports){function createUnaryUnit(theme,themeKey,defaultValue,propName){var _getPath;const themeSpacing=null!=(_getPath=(0,_style.getPath)(theme,themeKey,!1))?_getPath:defaultValue;if("number"===typeof themeSpacing)return abs=>{if("string"===typeof abs)return abs;"number"!==typeof abs&&console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);return themeSpacing*abs};if(Array.isArray(themeSpacing))return abs=>
{if("string"===typeof abs)return abs;Number.isInteger(abs)?abs>themeSpacing.length-1&&console.error([`MUI: The value provided (${abs}) overflows.`,`The supported values are: ${JSON.stringify(themeSpacing)}.`,`${abs} > ${themeSpacing.length-1}, you need to add the missing values.`].join("\n")):console.error([`MUI: The \`theme.${themeKey}\` array type cannot be combined with non integer values.`+`You should either use an integer value that can be used as index, or define the \`theme.${themeKey}\` as a number.`].join("\n"));
return themeSpacing[abs]};if("function"===typeof themeSpacing)return themeSpacing;console.error([`MUI: The \`theme.${themeKey}\` value (${themeSpacing}) is invalid.`,"It should be a number, an array or a function."].join("\n"));return()=>{}}function createUnarySpacing(theme){return createUnaryUnit(theme,"spacing",8,"spacing")}function getValue(transformer,propValue){if("string"===typeof propValue||null==propValue)return propValue;transformer=transformer(Math.abs(propValue));return 0<=propValue?transformer:
"number"===typeof transformer?-transformer:`-${transformer}`}function getStyleFromPropValue(cssProperties,transformer){return propValue=>cssProperties.reduce((acc,cssProperty)=>{acc[cssProperty]=getValue(transformer,propValue);return acc},{})}function style(props,keys){const transformer=createUnarySpacing(props.theme);return Object.keys(props).map(prop=>{if(-1===keys.indexOf(prop))prop=null;else{var cssProperties=getCssProperties(prop);cssProperties=getStyleFromPropValue(cssProperties,transformer);
prop=(0,_breakpoints.handleBreakpoints)(props,props[prop],cssProperties)}return prop}).reduce(_merge.default,{})}function margin(props){return style(props,marginKeys)}function padding(props){return style(props,paddingKeys)}function spacing(props){return style(props,spacingKeys)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.createUnarySpacing=createUnarySpacing;exports.createUnaryUnit=createUnaryUnit;
exports.default=void 0;exports.getStyleFromPropValue=getStyleFromPropValue;exports.getValue=getValue;exports.margin=margin;exports.marginKeys=void 0;exports.padding=padding;exports.paddingKeys=void 0;var _responsivePropType=global(require("module$node_modules$$mui$system$responsivePropType")),_breakpoints=require("module$node_modules$$mui$system$breakpoints"),_style=require("module$node_modules$$mui$system$style"),_merge=global(require("module$node_modules$$mui$system$merge"));const properties={m:"margin",
p:"padding"},directions={t:"Top",r:"Right",b:"Bottom",l:"Left",x:["Left","Right"],y:["Top","Bottom"]},aliases={marginX:"mx",marginY:"my",paddingX:"px",paddingY:"py"},getCssProperties=(0,global(require("module$node_modules$$mui$system$memoize")).default)(prop=>{if(2<prop.length)if(aliases[prop])prop=aliases[prop];else return[prop];const [a,b]=prop.split(""),property=properties[a];prop=directions[b]||"";return Array.isArray(prop)?prop.map(dir=>property+dir):[property+prop]}),marginKeys="m mt mr mb ml mx my margin marginTop marginRight marginBottom marginLeft marginX marginY marginInline marginInlineStart marginInlineEnd marginBlock marginBlockStart marginBlockEnd".split(" ");
exports.marginKeys=marginKeys;const paddingKeys="p pt pr pb pl px py padding paddingTop paddingRight paddingBottom paddingLeft paddingX paddingY paddingInline paddingInlineStart paddingInlineEnd paddingBlock paddingBlockStart paddingBlockEnd".split(" ");exports.paddingKeys=paddingKeys;const spacingKeys=[...marginKeys,...paddingKeys];margin.propTypes=marginKeys.reduce((obj,key)=>{obj[key]=_responsivePropType.default;return obj},{});margin.filterProps=marginKeys;padding.propTypes=paddingKeys.reduce((obj,
key)=>{obj[key]=_responsivePropType.default;return obj},{});padding.filterProps=paddingKeys;spacing.propTypes=spacingKeys.reduce((obj,key)=>{obj[key]=_responsivePropType.default;return obj},{});spacing.filterProps=spacingKeys;exports.default=spacing}
//# sourceMappingURL=module$node_modules$$mui$system$spacing.js.map
