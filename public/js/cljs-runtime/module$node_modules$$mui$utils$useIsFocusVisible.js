shadow$provide.module$node_modules$$mui$utils$useIsFocusVisible=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function handleKeyDown(event){event.metaKey||event.altKey||event.ctrlKey||(hadKeyboardEvent=!0)}function handlePointerDown(){hadKeyboardEvent=
!1}function handleVisibilityChange(){"hidden"===this.visibilityState&&hadFocusVisibleRecently&&(hadKeyboardEvent=!0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(){const ref=React.useCallback(node=>{null!=node&&(node=node.ownerDocument,node.addEventListener("keydown",handleKeyDown,!0),node.addEventListener("mousedown",handlePointerDown,!0),node.addEventListener("pointerdown",handlePointerDown,!0),node.addEventListener("touchstart",handlePointerDown,!0),node.addEventListener("visibilitychange",
handleVisibilityChange,!0))},[]),isFocusVisibleRef=React.useRef(!1);return{isFocusVisibleRef,onFocus:function(event){a:{({target:event}=event);try{var JSCompiler_inline_result=event.matches(":focus-visible");break a}catch(error){}if(!(JSCompiler_inline_result=hadKeyboardEvent)){const {type,tagName}=event;JSCompiler_inline_result="INPUT"===tagName&&inputTypesWhitelist[type]&&!event.readOnly||"TEXTAREA"===tagName&&!event.readOnly||event.isContentEditable?!0:!1}}return JSCompiler_inline_result?isFocusVisibleRef.current=
!0:!1},onBlur:function(){return isFocusVisibleRef.current?(hadFocusVisibleRecently=!0,window.clearTimeout(hadFocusVisibleRecentlyTimeout),hadFocusVisibleRecentlyTimeout=window.setTimeout(()=>{hadFocusVisibleRecently=!1},100),isFocusVisibleRef.current=!1,!0):!1},ref}};exports.teardown=function(doc){doc.removeEventListener("keydown",handleKeyDown,!0);doc.removeEventListener("mousedown",handlePointerDown,!0);doc.removeEventListener("pointerdown",handlePointerDown,!0);doc.removeEventListener("touchstart",
handlePointerDown,!0);doc.removeEventListener("visibilitychange",handleVisibilityChange,!0)};var React=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,
key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react$index"));let hadKeyboardEvent=!0,hadFocusVisibleRecently=!1,hadFocusVisibleRecentlyTimeout;const inputTypesWhitelist={text:!0,search:!0,url:!0,tel:!0,email:!0,password:!0,number:!0,date:!0,month:!0,week:!0,time:!0,datetime:!0,
"datetime-local":!0}}
//# sourceMappingURL=module$node_modules$$mui$utils$useIsFocusVisible.js.map
