{
"version":3,
"file":"module$node_modules$$mui$utils$elementTypeAcceptingRef.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/GC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAC7BI,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAQK,CAAAA,OAAR,CAAkB,IAAK,EACnBC,OAAAA,CAAaL,MAAA,CAAuBH,OAAA,CAAQ,sCAAR,CAAvB,CAuCbS,QAAAA,CAAW,GAtCON,MAAAO,CAAuBV,OAAA,CAAQ,+CAAR,CAAvBU,CAsCaH,CAAAA,OAApB,EAA6BC,MAAWD,CAAAA,OAAQI,CAAAA,WAAhD,CA9BfC,QAAgC,CAACC,KAAD,CAAQC,QAAR,CAAkBC,aAAlB,CAAiCC,QAAjC,CAA2CC,YAA3C,CAAyD,CACjFC,KAAAA;AAAYL,KAAA,CAAMC,QAAN,CAElB,IAAiB,IAAjB,EAAII,KAAJ,EAKkB,WALlB,GAKA,MAAOC,OALP,CAME,MAAO,KAET,KAAIC,WAWA,KAAA,eAAA,IAAA,eAAA,CAAA,UAAA,GAAA,MAAA,MAAA,CAAmC,CA3BjC,CACJ,UAAAC,KAAA,CAAY,EADR,CA2BiC,CAAAV,KAAA,EAAA,eAAA,CAAA,CAxBxBU,KAAUC,CAAAA,gBAwBrB,gBAAJ,GACEF,WADF,CACgB,kEADhB,CAGA,OAAoBG,KAAAA,EAApB,GAAIH,WAAJ,CACaI,KAAJ,CAAW,WAAUR,QAAV,MAxBCC,YAwBD,EAxBiBH,QAwBjB,oBAAwDC,aAAxD,MAAX,CAA0F,iDAAgDK,WAAhD,GAA1F;AAA2J,mEAA3J,CADT,CAGO,IA5BgF,CA8B1E,CACflB,QAAQK,CAAAA,OAAR,CAAkBE,OAhDiG;",
"sources":["node_modules/@mui/utils/elementTypeAcceptingRef.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$utils$elementTypeAcceptingRef\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _chainPropTypes = _interopRequireDefault(require(\"./chainPropTypes\"));\nfunction isClassComponent(elementType) {\n  // elementType.prototype?.isReactComponent\n  const {\n    prototype = {}\n  } = elementType;\n  return Boolean(prototype.isReactComponent);\n}\nfunction elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {\n  const propValue = props[propName];\n  const safePropName = propFullName || propName;\n  if (propValue == null ||\n  // When server-side rendering React doesn't warn either.\n  // This is not an accurate check for SSR.\n  // This is only in place for emotion compat.\n  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.\n  typeof window === 'undefined') {\n    return null;\n  }\n  let warningHint;\n\n  /**\n   * Blacklisting instead of whitelisting\n   *\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\n   * trigger a warning in React.\n   * We can't whitelist because there is no safe way to detect React.forwardRef\n   * or class components. \"Safe\" means there's no public API.\n   *\n   */\n  if (typeof propValue === 'function' && !isClassComponent(propValue)) {\n    warningHint = 'Did you accidentally provide a plain function component instead?';\n  }\n  if (warningHint !== undefined) {\n    return new Error(`Invalid ${location} \\`${safePropName}\\` supplied to \\`${componentName}\\`. ` + `Expected an element type that can hold a ref. ${warningHint} ` + 'For more information see https://mui.com/r/caveat-with-refs-guide');\n  }\n  return null;\n}\nvar _default = (0, _chainPropTypes.default)(_propTypes.default.elementType, elementTypeAcceptingRef);\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","default","_propTypes","_default","_chainPropTypes","elementType","elementTypeAcceptingRef","props","propName","componentName","location","propFullName","propValue","window","warningHint","prototype","isReactComponent","undefined","Error"]
}
