shadow$provide.module$node_modules$$mui$utils$integerPropType=function(global,require,module,exports){function getTypeByValue(value){const valueType=typeof value;switch(valueType){case "number":return Number.isNaN(value)?"NaN":Number.isFinite(value)?value!==Math.floor(value)?"float":"number":"Infinity";case "object":return null===value?"null":value.constructor.name;default:return valueType}}function ponyfillIsInteger(x){return"number"===typeof x&&isFinite(x)&&Math.floor(x)===x}function requiredInteger(props,
propName,componentName,location){props=props[propName];return null!=props&&isInteger(props)?null:(props=getTypeByValue(props),new RangeError(`Invalid ${location} \`${propName}\` of type \`${props}\` supplied to \`${componentName}\`, expected \`integer\`.`))}function validator(props,propName,...other){return void 0===props[propName]?null:requiredInteger(props,propName,...other)}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;exports.getTypeByValue=getTypeByValue;const isInteger=
Number.isInteger||ponyfillIsInteger;validator.isRequired=requiredInteger;exports.default=validator}
//# sourceMappingURL=module$node_modules$$mui$utils$integerPropType.js.map
