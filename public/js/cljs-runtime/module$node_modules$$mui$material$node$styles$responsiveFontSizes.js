shadow$provide.module$node_modules$$mui$material$node$styles$responsiveFontSizes=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(themeInput,options={}){const {breakpoints=["sm","md","lg"],disableAlign=!1,factor=2,variants="h1 h2 h3 h4 h5 h6 subtitle1 subtitle2 body1 body2 caption button overline".split(" ")}=options,theme=(0,_extends2.default)({},
themeInput);theme.typography=(0,_extends2.default)({},theme.typography);const typography=theme.typography,convert=(0,_cssUtils.convertLength)(typography.htmlFontSize),breakpointValues=breakpoints.map(x=>theme.breakpoints.values[x]);variants.forEach(variant=>{const style=typography[variant],remFontSize=parseFloat(convert(style.fontSize,"rem"));if(!(1>=remFontSize)){var minFontSize=1+(remFontSize-1)/factor,{lineHeight}=style;if(!(0,_cssUtils.isUnitless)(lineHeight)&&!disableAlign)throw Error("MUI: Unsupported non-unitless line height with grid alignment.\nUse unitless line heights instead.");
(0,_cssUtils.isUnitless)(lineHeight)||(lineHeight=parseFloat(convert(lineHeight,"rem"))/parseFloat(remFontSize));var transform=null;disableAlign||(transform=value=>(0,_cssUtils.alignProperty)({size:value,grid:(0,_cssUtils.fontGrid)({pixels:4,lineHeight,htmlFontSize:typography.htmlFontSize})}));typography[variant]=(0,_extends2.default)({},style,(0,_cssUtils.responsiveProperty)({cssProperty:"fontSize",min:minFontSize,max:remFontSize,unit:"rem",breakpoints:breakpointValues,transform}))}});return theme};
var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends"));require("module$node_modules$$mui$utils$index");var _cssUtils=require("module$node_modules$$mui$material$node$styles$cssUtils")}
//# sourceMappingURL=module$node_modules$$mui$material$node$styles$responsiveFontSizes.js.map
