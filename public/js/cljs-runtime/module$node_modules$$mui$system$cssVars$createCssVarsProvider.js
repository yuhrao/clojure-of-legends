shadow$provide.module$node_modules$$mui$system$cssVars$createCssVarsProvider=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;
if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,
desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.DISABLE_CSS_TRANSITION=void 0;exports.default=function(options){function CssVarsProvider({children,theme:themeProp=defaultTheme,modeStorageKey=defaultModeStorageKey,colorSchemeStorageKey=defaultColorSchemeStorageKey,attribute=defaultAttribute,defaultMode=
designSystemMode,defaultColorScheme=designSystemColorScheme,disableTransitionOnChange=designSystemTransitionOnChange,storageWindow="undefined"===typeof window?void 0:window,documentNode="undefined"===typeof document?void 0:document,colorSchemeNode="undefined"===typeof document?void 0:document.documentElement,colorSchemeSelector=":root",shouldSkipGeneratingVar=designSystemShouldSkipGeneratingVar,disableNestedContext=!1,disableStyleSheetGeneration=!1}){const hasMounted=React.useRef(!1),upperTheme=(0,_privateTheming.useTheme)(),
ctx=React.useContext(ColorSchemeContext);disableNestedContext=!!ctx&&!disableNestedContext;const {colorSchemes={},components={},cssVarPrefix}=themeProp;themeProp=(0,_objectWithoutPropertiesLoose2.default)(themeProp,_excluded);const allColorSchemes=Object.keys(colorSchemes),defaultLightColorScheme="string"===typeof defaultColorScheme?defaultColorScheme:defaultColorScheme.light,defaultDarkColorScheme="string"===typeof defaultColorScheme?defaultColorScheme:defaultColorScheme.dark,{mode:stateMode,setMode,
systemMode,lightColorScheme,darkColorScheme,colorScheme:stateColorScheme,setColorScheme}=(0,_useCurrentColorScheme.default)({supportedColorSchemes:allColorSchemes,defaultLightColorScheme,defaultDarkColorScheme,modeStorageKey,colorSchemeStorageKey,defaultMode,storageWindow});let mode=stateMode,colorScheme=stateColorScheme;disableNestedContext&&(mode=ctx.mode,colorScheme=ctx.colorScheme);modeStorageKey=mode?mode:"system"===defaultMode?designSystemMode:defaultMode;const calculatedColorScheme=colorScheme?
colorScheme:"dark"===modeStorageKey?defaultDarkColorScheme:defaultLightColorScheme,{css:rootCss,vars:rootVars}=(0,_cssVarsParser.default)(themeProp,{prefix:cssVarPrefix,shouldSkipGeneratingVar}),theme=(0,_extends2.default)({},themeProp,{components,colorSchemes,cssVarPrefix,vars:rootVars,getColorSchemeSelector:targetColorScheme=>`[${attribute}="${targetColorScheme}"] &`}),defaultColorSchemeStyleSheet={},otherColorSchemesStyleSheet={};Object.entries(colorSchemes).forEach(([key,scheme])=>{const {css,
vars}=(0,_cssVarsParser.default)(scheme,{prefix:cssVarPrefix,shouldSkipGeneratingVar});theme.vars=(0,_utils.deepmerge)(theme.vars,vars);key===calculatedColorScheme&&(Object.keys(scheme).forEach(schemeKey=>{theme[schemeKey]=scheme[schemeKey]&&"object"===typeof scheme[schemeKey]?(0,_extends2.default)({},theme[schemeKey],scheme[schemeKey]):scheme[schemeKey]}),theme.palette&&(theme.palette.colorScheme=key));if(key===("string"===typeof defaultColorScheme?defaultColorScheme:"dark"===defaultMode?defaultColorScheme.dark:
defaultColorScheme.light)){if(excludeVariablesFromRoot){const excludedVariables={};excludeVariablesFromRoot(cssVarPrefix).forEach(cssVar=>{excludedVariables[cssVar]=css[cssVar];delete css[cssVar]});defaultColorSchemeStyleSheet[`[${attribute}="${key}"]`]=excludedVariables}defaultColorSchemeStyleSheet[`${colorSchemeSelector}, [${attribute}="${key}"]`]=css}else otherColorSchemesStyleSheet[`${":root"===colorSchemeSelector?"":colorSchemeSelector}[${attribute}="${key}"]`]=css});React.useEffect(()=>{colorScheme&&
colorSchemeNode&&colorSchemeNode.setAttribute(attribute,colorScheme)},[colorScheme,attribute,colorSchemeNode]);React.useEffect(()=>{let timer;if(disableTransitionOnChange&&hasMounted.current&&documentNode){const css=documentNode.createElement("style");css.appendChild(documentNode.createTextNode("*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}"));documentNode.head.appendChild(css);window.getComputedStyle(documentNode.body);
timer=setTimeout(()=>{documentNode.head.removeChild(css)},1)}return()=>{clearTimeout(timer)}},[colorScheme,disableTransitionOnChange,documentNode]);React.useEffect(()=>{hasMounted.current=!0;return()=>{hasMounted.current=!1}},[]);modeStorageKey=React.useMemo(()=>({mode,systemMode,setMode,lightColorScheme,darkColorScheme,colorScheme,setColorScheme,allColorSchemes}),[allColorSchemes,colorScheme,darkColorScheme,lightColorScheme,mode,setColorScheme,setMode,systemMode]);colorSchemeStorageKey=!0;if(disableStyleSheetGeneration||
disableNestedContext&&(null==upperTheme?void 0:upperTheme.cssVarPrefix)===cssVarPrefix)colorSchemeStorageKey=!1;children=(0,_jsxRuntime.jsxs)(React.Fragment,{children:[colorSchemeStorageKey&&(0,_jsxRuntime.jsxs)(React.Fragment,{children:[(0,_jsxRuntime.jsx)(_styledEngine.GlobalStyles,{styles:{[colorSchemeSelector]:rootCss}}),(0,_jsxRuntime.jsx)(_styledEngine.GlobalStyles,{styles:defaultColorSchemeStyleSheet}),(0,_jsxRuntime.jsx)(_styledEngine.GlobalStyles,{styles:otherColorSchemesStyleSheet})]}),
(0,_jsxRuntime.jsx)(_ThemeProvider.default,{theme:resolveTheme?resolveTheme(theme):theme,children})]});return disableNestedContext?children:(0,_jsxRuntime.jsx)(ColorSchemeContext.Provider,{value:modeStorageKey,children})}const {theme:defaultTheme={},attribute:defaultAttribute=_getInitColorSchemeScript.DEFAULT_ATTRIBUTE,modeStorageKey:defaultModeStorageKey=_getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,colorSchemeStorageKey:defaultColorSchemeStorageKey=_getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,
defaultMode:designSystemMode="light",defaultColorScheme:designSystemColorScheme,disableTransitionOnChange:designSystemTransitionOnChange=!1,shouldSkipGeneratingVar:designSystemShouldSkipGeneratingVar,resolveTheme,excludeVariablesFromRoot}=options;(!defaultTheme.colorSchemes||"string"===typeof designSystemColorScheme&&!defaultTheme.colorSchemes[designSystemColorScheme]||"object"===typeof designSystemColorScheme&&!defaultTheme.colorSchemes[null==designSystemColorScheme?void 0:designSystemColorScheme.light]||
"object"===typeof designSystemColorScheme&&!defaultTheme.colorSchemes[null==designSystemColorScheme?void 0:designSystemColorScheme.dark])&&console.error(`MUI: \`${designSystemColorScheme}\` does not exist in \`theme.colorSchemes\`.`);const ColorSchemeContext=React.createContext(void 0);CssVarsProvider.propTypes={attribute:_propTypes.default.string,children:_propTypes.default.node,colorSchemeNode:_propTypes.default.any,colorSchemeSelector:_propTypes.default.string,colorSchemeStorageKey:_propTypes.default.string,
defaultColorScheme:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]),defaultMode:_propTypes.default.string,disableNestedContext:_propTypes.default.bool,disableStyleSheetGeneration:_propTypes.default.bool,disableTransitionOnChange:_propTypes.default.bool,documentNode:_propTypes.default.any,modeStorageKey:_propTypes.default.string,shouldSkipGeneratingVar:_propTypes.default.func,storageWindow:_propTypes.default.any,theme:_propTypes.default.object};const defaultLightColorScheme$jscomp$0=
"string"===typeof designSystemColorScheme?designSystemColorScheme:designSystemColorScheme.light,defaultDarkColorScheme$jscomp$0="string"===typeof designSystemColorScheme?designSystemColorScheme:designSystemColorScheme.dark;return{CssVarsProvider,useColorScheme:()=>{const value=React.useContext(ColorSchemeContext);if(!value)throw Error("MUI: `useColorScheme` must be called under \x3cCssVarsProvider /\x3e");return value},getInitColorSchemeScript:params=>(0,_getInitColorSchemeScript.default)((0,_extends2.default)({attribute:defaultAttribute,
colorSchemeStorageKey:defaultColorSchemeStorageKey,defaultMode:designSystemMode,defaultLightColorScheme:defaultLightColorScheme$jscomp$0,defaultDarkColorScheme:defaultDarkColorScheme$jscomp$0,modeStorageKey:defaultModeStorageKey},params))}};var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutPropertiesLoose2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")),_utils=require("module$node_modules$$mui$utils$index"),
React=_interopRequireWildcard(require("module$node_modules$react$index")),_propTypes=global(require("module$node_modules$prop_types$index")),_styledEngine=require("module$node_modules$$mui$styled_engine$node$index"),_privateTheming=require("module$node_modules$$mui$private_theming$node$index"),_cssVarsParser=global(require("module$node_modules$$mui$system$cssVars$cssVarsParser")),_ThemeProvider=global(require("module$node_modules$$mui$system$ThemeProvider$index")),_getInitColorSchemeScript=_interopRequireWildcard(require("module$node_modules$$mui$system$cssVars$getInitColorSchemeScript")),
_useCurrentColorScheme=global(require("module$node_modules$$mui$system$cssVars$useCurrentColorScheme")),_jsxRuntime=require("module$node_modules$react$jsx_runtime");const _excluded=["colorSchemes","components","cssVarPrefix"];exports.DISABLE_CSS_TRANSITION="*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}"}
//# sourceMappingURL=module$node_modules$$mui$system$cssVars$createCssVarsProvider.js.map
