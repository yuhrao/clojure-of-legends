shadow$provide.module$node_modules$$mui$utils$elementAcceptingRef=function(global,require,module,exports){function acceptingRef(props,propName,componentName,location,propFullName){props=props[propName];if(null==props||"undefined"===typeof window)return null;let warningHint;props=props.type;var JSCompiler_temp;if(JSCompiler_temp="function"===typeof props)({prototype:props={}}=props),JSCompiler_temp=!props.isReactComponent;JSCompiler_temp&&(warningHint="Did you accidentally use a plain function component for an element instead?");
return void 0!==warningHint?Error(`Invalid ${location} \`${propFullName||propName}\` supplied to \`${componentName}\`. `+`Expected an element that can hold a ref. ${warningHint} `+"For more information see https://mui.com/r/caveat-with-refs-guide"):null}module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;global=module(require("module$node_modules$prop_types$index"));require=module(require("module$node_modules$$mui$utils$chainPropTypes"));
module=(0,require.default)(global.default.element,acceptingRef);module.isRequired=(0,require.default)(global.default.element.isRequired,acceptingRef);exports.default=module}
//# sourceMappingURL=module$node_modules$$mui$utils$elementAcceptingRef.js.map
